"use strict";var FOUR=FOUR||{};FOUR.CURSOR={DEFAULT:"default",PAN:"all-scroll",ROTATE:"crosshair",ZOOM:"ns-resize"},FOUR.DEFAULT={CAMERA:{far:1e3,fov:45,height:1,name:"camera",near:.1,width:1}},FOUR.KEY={},FOUR.MOUSE_STATE={DOWN:0,MOVE:1,UP:2},FOUR.SINGLE_CLICK_TIMEOUT=400,FOUR.VIEW={TOP:"top",FRONT:"front",RIGHT:"right",BACK:"back",LEFT:"left",BOTTOM:"bottom"},FOUR.utils={},FOUR.utils.getObject3DScreenBoundingBox=function(obj,camera,screenWidth,screenHeight,strategy){throw new Error("not implemented")},FOUR.utils.getObjectScreenCoordinates=function(obj,camera,screenWidth,screenHeight){var pos=new THREE.Vector3;return obj instanceof THREE.Object3D?(obj.updateMatrixWorld(),pos.setFromMatrixPosition(obj.matrixWorld)):pos.copy(obj),pos.project(camera),pos.x=Math.round((pos.x+1)*screenWidth/2),pos.y=Math.round((-pos.y+1)*screenHeight/2),pos.z=0,pos},FOUR.utils.getVertexScreenCoordinates=function(vertex,camera,screenWidth,screenHeight){var pos=(new THREE.Vector3).copy(vertex);return pos.project(camera),pos.x=Math.round((pos.x+1)*screenWidth/2),pos.y=Math.round((-pos.y+1)*screenHeight/2),pos.z=0,pos},FOUR.utils.intersects=function(r1,r2){throw new Error("not implemented")},FOUR.utils.isContained=function(r1,r2){return r1.p1.x>=r2.p1.x&&r1.p1.x<=r2.p2.x&&r1.p2.x>=r2.p1.x&&r1.p2.x<=r2.p2.x&&r1.p1.y>=r2.p1.y&&r1.p1.y<=r2.p2.y&&r1.p2.y>=r2.p1.y&&r1.p2.y<=r2.p2.y?!0:!1},FOUR.KeyInputController=function(){function KeyInputController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.KEYS={ALT:"alt",CTRL:"ctrl",CTRL_A:"ctrl+a",CTRL_N:"ctrl+n",DOWN:"down",LEFT:"left",META:"meta",RIGHT:"right",SHIFT:"shift",UP:"up"},self.enabled=config.enabled||!1,self.modifiers={},Object.keys(self.KEYS).forEach(function(key){self.modifiers[self.KEYS[key]]=!1}),Mousetrap.bind("alt",function(evt){self.keydown(self.KEYS.ALT,evt)},"keydown"),Mousetrap.bind("alt",function(evt){self.keyup(self.KEYS.ALT,evt)},"keyup"),Mousetrap.bind("ctrl",function(evt){self.keydown(self.KEYS.CTRL,evt)},"keydown"),Mousetrap.bind("ctrl",function(evt){self.keyup(self.KEYS.CTRL,evt)},"keyup"),Mousetrap.bind("shift",function(evt){self.keydown(self.KEYS.SHIFT,evt)},"keydown"),Mousetrap.bind("shift",function(evt){self.keyup(self.KEYS.SHIFT,evt)},"keyup"),Mousetrap.bind("ctrl+a",function(evt){self.keyup(self.KEYS.CTRL_A,evt)}),Mousetrap.bind("ctrl+n",function(evt){self.keyup(self.KEYS.CTRL_N,evt)}),Mousetrap.bind("i",function(evt){self.keydown(self.KEYS.UP,evt)},"keydown"),Mousetrap.bind("i",function(evt){self.keyup(self.KEYS.UP,evt)},"keyup"),Mousetrap.bind("k",function(evt){self.keydown(self.KEYS.DOWN,evt)},"keydown"),Mousetrap.bind("k",function(evt){self.keyup(self.KEYS.DOWN,evt)},"keyup"),Mousetrap.bind("j",function(evt){self.keydown(self.KEYS.LEFT,evt)},"keydown"),Mousetrap.bind("j",function(evt){self.keyup(self.KEYS.LEFT,evt)},"keyup"),Mousetrap.bind("l",function(evt){self.keydown(self.KEYS.RIGHT,evt)},"keydown"),Mousetrap.bind("l",function(evt){self.keyup(self.KEYS.RIGHT,evt)},"keyup"),Mousetrap.bind("u",function(evt){self.keydown(self.KEYS.RIGHT,evt)},"keydown"),Mousetrap.bind("u",function(evt){self.keyup(self.KEYS.RIGHT,evt)},"keyup"),Mousetrap.bind("o",function(evt){self.keydown(self.KEYS.RIGHT,evt)},"keydown"),Mousetrap.bind("o",function(evt){self.keyup(self.KEYS.RIGHT,evt)},"keyup")}return KeyInputController.prototype=Object.create(THREE.EventDispatcher.prototype),KeyInputController.prototype.constructor=KeyInputController,KeyInputController.prototype.keydown=function(key,evt){this.modifiers[key]=!0,this.dispatchEvent({type:"keydown",key:key,keyCode:evt?evt.keyCode:null})},KeyInputController.prototype.keyup=function(key,evt){this.modifiers[key]=!1,this.dispatchEvent({type:"keyup",key:key,keyCode:evt?evt.keyCode:null})},KeyInputController.prototype.register=function(command,callback){throw new Error("not implemented")},KeyInputController}(),FOUR.PathPlanner=function(){function PathPlanner(config){config=config||{};var self=this;self.PLANNING_STRATEGY={GENETIC:0,SIMULATED_ANNEALING:1},this.strategy=self.PLANNING_STRATEGY.SIMULATED_ANNEALING,this.workersPath="/",Object.keys(config).forEach(function(key){self[key]=config[key]})}return PathPlanner.prototype.generateTourSequence=function(features){var self=this;return this.strategy===this.PLANNING_STRATEGY.GENETIC?new Promise(function(resolve,reject){try{var worker=new Worker(self.workersPath+"GeneticPlanner.js");worker.onmessage=function(e){resolve(e.data)},worker.postMessage({cmd:"run",itinerary:features,generations:500,populationSize:50})}catch(err){reject(err)}}):this.strategy===this.PLANNING_STRATEGY.SIMULATED_ANNEALING?new Promise(function(resolve,reject){try{var worker=new Worker(self.workersPath+"SimulatedAnnealer.js");worker.onmessage=function(e){resolve(e.data)},worker.postMessage({cmd:"run",array:features,initialTemperature:1e4,coolingRate:1e-5})}catch(err){reject(err)}}):void 0},PathPlanner.prototype.setStrategy=function(strategy){this.strategy=strategy},PathPlanner}(),FOUR.Scene=function(){function Scene(config){THREE.Scene.call(this),config=config||{};var self=this;self.cameras=new THREE.Object3D,self.helpers=new THREE.Object3D,self.lights=new THREE.Object3D,self.model=new THREE.Object3D,self.cameras.name="cameras",self.lights.name="lights",self.model.name="model",self.helpers.name="helpers",self.add(self.cameras),self.add(self.lights),self.add(self.model),self.add(self.helpers),Object.keys(config).forEach(function(key){self[key]=config[key]})}return Scene.prototype=Object.create(THREE.Scene.prototype),Scene.prototype.constructor=Scene,Scene.prototype.emit=function(type,value){this.dispatchEvent({type:type,value:value})},Scene.prototype.getCamera=function(name){return this.getLayerObject("cameras",name)},Scene.prototype.getCameras=function(){return this.getLayerObjects("cameras")},Scene.prototype.getHelper=function(name){return this.getLayerObject("helpers",name)},Scene.prototype.getHelpers=function(){return this.getLayerObjects("helpers")},Scene.prototype.getLayer=function(name){return this.getLayers().reduce(function(last,current){return current.name===name&&(last=current),last},null)},Scene.prototype.getLayers=function(){return this.children.reduce(function(last,current){return typeof current===THREE.Object3D&&last.push(current),last},[])},Scene.prototype.getLayerObjects=function(layer){return this.children.reduce(function(last,current){return current.name===layer?current.children:last},null)},Scene.prototype.getLayerObject=function(layer,name){return this.getLayerObjects(layer).reduce(function(last,current){return current.name===name?current:last},null)},Scene.prototype.getLight=function(name){return this.getLayerObject("lights",name)},Scene.prototype.getLights=function(){return this.getLayerObjects("lights")},Scene.prototype.getModelLayerObject=function(name){return this.getLayerObject("model",name)},Scene.prototype.getModelObjects=function(){function getChildren(obj){var children=[];return obj.children&&obj.children.length>0&&obj.children.forEach(function(child){children.push(child),getChildren(child).forEach(function(obj){children.push(obj)})}),children}return getChildren(this.model)},Scene}(),FOUR.TargetCamera=function(){function TargetCamera(fov,aspect,near,far){THREE.PerspectiveCamera.call(this);var self=this;self.MAXIMUM_DISTANCE=1e4>far?far:1e4,self.MINIMUM_DISTANCE=1,self.VIEWS={TOP:0,LEFT:1,RIGHT:2,FRONT:3,BACK:4,PERSPECTIVE:5},self.ZOOM_FACTOR=1.5,self.aspect=aspect,self.far=far,self.fov=fov,self.near=near,self.up=new THREE.Vector3(0,0,1),self.updateProjectionMatrix(),self.distance=1,self.position.set(0,-1,0),self.target=new THREE.Vector3(0,0,0),self.lookAt(self.target)}return TargetCamera.prototype=Object.create(THREE.PerspectiveCamera.prototype),TargetCamera.prototype.constructor=TargetCamera,TargetCamera.prototype.emit=function(event){this.dispatchEvent({type:event})},TargetCamera.prototype.getDistance=function(){return this.distance=(new THREE.Vector3).subVectors(this.position,this.target).length(),this.distance},TargetCamera.prototype.getDirection=function(){return this.getOffset().normalize()},TargetCamera.prototype.getOffset=function(){return(new THREE.Vector3).subVectors(this.target,this.position)},TargetCamera.prototype.getPosition=function(){return(new THREE.Vector3).copy(this.position)},TargetCamera.prototype.getTarget=function(){return(new THREE.Vector3).copy(this.target)},TargetCamera.prototype.resetOrientation=function(progress,animate){var self=this,up=new THREE.Vector3(0,0,1);return animate=animate||!1,animate?self.tweenToOrientation(self,up,progress||self.emit.bind(self)):self.setUp(up)},TargetCamera.prototype.setDistance=function(distance,animate){var position,offset=this.getOffset(),self=this;return animate=animate||!1,self.distance=distance<this.MINIMUM_DISTANCE?this.MINIMUM_DISTANCE:distance,offset.setLength(self.distance),position=(new THREE.Vector3).addVectors(offset.negate(),self.target),animate?self.tweenToPosition(position,self.target):(self.position.copy(position),self.dispatchEvent({type:"update"}),Promise.resolve())},TargetCamera.prototype.setLookAt=function(lookAt,animate){var offset,self=this;animate=animate||!1,offset=(new THREE.Vector3).subVectors(lookAt,self.position),offset.setLength(self.distance);var target=(new THREE.Vector3).addVectors(self.position,offset);return animate?self.tweenToPosition(self.position,target):void 0},TargetCamera.prototype.setPosition=function(position,animate){animate=animate||!1;var offset=this.getOffset(),self=this,target=(new THREE.Vector3).addVectors(offset,position);return animate?self.tweenToPosition(position,target):(self.position.copy(position),self.target.copy(target),self.dispatchEvent({type:"update"}),Promise.resolve())},TargetCamera.prototype.setPositionAndTarget=function(pos,target,animate){var self=this;return self.tweenToPosition(pos,target)},TargetCamera.prototype.setTarget=function(target,animate){animate=animate||!1;var offset=this.getOffset().negate(),self=this,position=(new THREE.Vector3).addVectors(offset,target);return animate?self.tweenToPosition(position,target):(self.position.copy(position),self.target.copy(target),self.dispatchEvent({type:"update"}),Promise.resolve())},TargetCamera.prototype.setUp=function(vec,animate){var self=this;return animate=animate||!1,self.up=vec,self.dispatchEvent({type:"update"}),animate?Promise.resolve():(self.dispatchEvent({type:"update"}),Promise.resolve())},TargetCamera.prototype.setView=function(orientation,bbox,animate){var distance,position,rotation,target,center=bbox.getCenter(),direction=new THREE.Vector3,radius=bbox.getRadius(),self=this;return animate=animate||!1,position=(new THREE.Vector3).copy(center),target=(new THREE.Vector3).copy(center),distance=radius/Math.tan(Math.PI*self.fov/360),orientation===self.VIEWS.TOP?(position.z=center.z+distance,rotation=(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,0)),direction.set(0,0,-1)):orientation===self.VIEWS.FRONT?(position.y=center.y-distance,rotation=(new THREE.Quaternion).setFromEuler(new THREE.Euler(Math.PI/2,0,0)),direction.set(0,-1,0)):orientation===self.VIEWS.BACK?(position.y=center.y+distance,rotation=(new THREE.Quaternion).setFromEuler(new THREE.Euler(Math.PI/2,Math.PI,0)),direction.set(0,1,0)):orientation===self.VIEWS.RIGHT?(position.x=center.x+distance,rotation=(new THREE.Quaternion).setFromEuler(new THREE.Euler(Math.PI/2,Math.PI/2,0)),direction.set(-1,0,0)):orientation===self.VIEWS.LEFT?(position.x=center.x-distance,rotation=(new THREE.Quaternion).setFromEuler(new THREE.Euler(Math.PI/2,1.5*Math.PI,0)),direction.set(1,0,0)):orientation===self.VIEWS.BOTTOM?(position.z=center.z-distance,direction.set(0,0,1)):orientation===self.VIEWS.PERSPECTIVE&&(position.set(center.x-100,center.y-100,center.z+100),direction.set(1,1,-1)),animate?self.tweenToPosition(position,target,rotation):(self.position.copy(position),self.target.copy(target),self.lookAt(self.target),self.distance=(new THREE.Vector3).subVectors(self.position,self.target).length(),self.dispatchEvent({type:"update"}),Promise.resolve())},TargetCamera.prototype.tweenToOrientation=function(orientation){var self=this;return new Promise(function(resolve){var start={x:self.up.x,y:self.up.y,z:self.up.z},finish={x:orientation.x,y:orientation.y,z:orientation.z},tween=new TWEEN.Tween(start).to(finish,1e3);tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(function(){self.up.set(this.x,this.y,this.z),self.dispatchEvent({type:"update"}),self.dispatchEvent({type:"continuous-update-end"}),resolve()}),tween.onUpdate(function(){self.up.set(this.x,this.y,this.z),self.dispatchEvent({type:"update"})}),tween.start(),self.dispatchEvent({type:"continuous-update-start"})})},TargetCamera.prototype.tweenToPosition=function(position,target,rotation){var q1,q2,self=this;return new Promise(function(resolve){var start={i:0,x:self.position.x,y:self.position.y,z:self.position.z,tx:self.target.x,ty:self.target.y,tz:self.target.z},finish={i:1,x:position.x,y:position.y,z:position.z,tx:target.x,ty:target.y,tz:target.z};rotation&&(q1=(new THREE.Quaternion).copy(self.quaternion).normalize(),q2=rotation.normalize());var tween=((new THREE.Vector3).subVectors(self.position,position).length,(new THREE.Vector3).subVectors(self.target,target).length(),new TWEEN.Tween(start).to(finish,1500));tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(function(){var d=this;self.position.set(d.x,d.y,d.z),self.target.set(d.tx,d.ty,d.tz),rotation?THREE.Quaternion.slerp(q1,q2,self.quaternion,d.i):self.lookAt(self.target),self.distance=(new THREE.Vector3).subVectors(self.position,self.target).length(),self.dispatchEvent({type:"update"}),self.dispatchEvent({type:"continuous-update-end"}),resolve()}),tween.onUpdate(function(){var d=this;self.position.set(d.x,d.y,d.z),self.target.set(d.tx,d.ty,d.tz),rotation?THREE.Quaternion.slerp(q1,q2,self.quaternion,d.i):self.lookAt(self.target),self.distance=(new THREE.Vector3).subVectors(self.position,self.target).length(),self.dispatchEvent({type:"update"})}),tween.start(),self.dispatchEvent({type:"continuous-update-start"})})},TargetCamera.prototype.zoomIn=function(animate){animate=animate||!1;var distance=this.getDistance()/this.ZOOM_FACTOR,self=this;return distance=distance<=this.MINIMUM_DISTANCE?this.MINIMUM_DISTANCE:distance,self.setDistance(distance,animate)},TargetCamera.prototype.zoomOut=function(animate){animate=animate||!1;var distance=this.getDistance()*this.ZOOM_FACTOR,self=this;return distance=distance>=this.MAXIMUM_DISTANCE?this.MAXIMUM_DISTANCE:distance,self.setDistance(distance,animate)},TargetCamera.prototype.zoomToFit=function(bbox,animate){animate=animate||!1;var distance,self=this;return distance=bbox.getRadius()/Math.tan(Math.PI*self.fov/360),self.setTarget(bbox.getCenter(),animate).then(function(){return self.setDistance(distance,animate)})},TargetCamera}(),FOUR.TransformController=function(){var GizmoMaterial=function(parameters){THREE.MeshBasicMaterial.call(this),this.depthTest=!1,this.depthWrite=!1,this.side=THREE.FrontSide,this.transparent=!0,this.setValues(parameters),this.oldColor=this.color.clone(),this.oldOpacity=this.opacity,this.highlight=function(highlighted){highlighted?(this.color.setRGB(1,1,0),this.opacity=1):(this.color.copy(this.oldColor),this.opacity=this.oldOpacity)}};GizmoMaterial.prototype=Object.create(THREE.MeshBasicMaterial.prototype),GizmoMaterial.prototype.constructor=GizmoMaterial;var GizmoLineMaterial=function(parameters){THREE.LineBasicMaterial.call(this),this.depthTest=!1,this.depthWrite=!1,this.transparent=!0,this.linewidth=1,this.setValues(parameters),this.oldColor=this.color.clone(),this.oldOpacity=this.opacity,this.highlight=function(highlighted){highlighted?(this.color.setRGB(1,1,0),this.opacity=1):(this.color.copy(this.oldColor),this.opacity=this.oldOpacity)}};GizmoLineMaterial.prototype=Object.create(THREE.LineBasicMaterial.prototype),GizmoLineMaterial.prototype.constructor=GizmoLineMaterial;var pickerMaterial=new GizmoMaterial({visible:!1,transparent:!1});THREE.TransformGizmo=function(){this.init=function(){THREE.Object3D.call(this),this.handles=new THREE.Object3D,this.pickers=new THREE.Object3D,this.planes=new THREE.Object3D,this.add(this.handles),this.add(this.pickers),this.add(this.planes);var planeGeometry=new THREE.PlaneBufferGeometry(50,50,2,2),planeMaterial=new THREE.MeshBasicMaterial({visible:!1,side:THREE.DoubleSide}),planes={XY:new THREE.Mesh(planeGeometry,planeMaterial),YZ:new THREE.Mesh(planeGeometry,planeMaterial),XZ:new THREE.Mesh(planeGeometry,planeMaterial),XYZE:new THREE.Mesh(planeGeometry,planeMaterial)};this.activePlane=planes.XYZE,planes.YZ.rotation.set(0,Math.PI/2,0),planes.XZ.rotation.set(-Math.PI/2,0,0);for(var i in planes)planes[i].name=i,this.planes.add(planes[i]),this.planes[i]=planes[i];var setupGizmos=function(gizmoMap,parent){for(var name in gizmoMap)for(i=gizmoMap[name].length;i--;){var object=gizmoMap[name][i][0],position=gizmoMap[name][i][1],rotation=gizmoMap[name][i][2];object.name=name,position&&object.position.set(position[0],position[1],position[2]),rotation&&object.rotation.set(rotation[0],rotation[1],rotation[2]),parent.add(object)}};setupGizmos(this.handleGizmos,this.handles),setupGizmos(this.pickerGizmos,this.pickers),this.traverse(function(child){if(child instanceof THREE.Mesh){child.updateMatrix();var tempGeometry=child.geometry.clone();tempGeometry.applyMatrix(child.matrix),child.geometry=tempGeometry,child.position.set(0,0,0),child.rotation.set(0,0,0),child.scale.set(1,1,1)}})},this.highlight=function(axis){this.traverse(function(child){child.material&&child.material.highlight&&(child.name===axis?child.material.highlight(!0):child.material.highlight(!1))})}},THREE.TransformGizmo.prototype=Object.create(THREE.Object3D.prototype),THREE.TransformGizmo.prototype.constructor=THREE.TransformGizmo,THREE.TransformGizmo.prototype.update=function(rotation,eye){var vec1=new THREE.Vector3(0,0,0),vec2=new THREE.Vector3(0,1,0),lookAtMatrix=new THREE.Matrix4;this.traverse(function(child){-1!==child.name.search("E")?child.quaternion.setFromRotationMatrix(lookAtMatrix.lookAt(eye,vec1,vec2)):(-1!==child.name.search("X")||-1!==child.name.search("Y")||-1!==child.name.search("Z"))&&child.quaternion.setFromEuler(rotation)})},THREE.TransformGizmoTranslate=function(){THREE.TransformGizmo.call(this);var arrowGeometry=new THREE.Geometry,mesh=new THREE.Mesh(new THREE.CylinderGeometry(0,.05,.2,12,1,!1));mesh.position.y=.5,mesh.updateMatrix(),arrowGeometry.merge(mesh.geometry,mesh.matrix);var lineXGeometry=new THREE.BufferGeometry;lineXGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,1,0,0],3));var lineYGeometry=new THREE.BufferGeometry;lineYGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,1,0],3));var lineZGeometry=new THREE.BufferGeometry;lineZGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,0,1],3)),this.handleGizmos={X:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:16711680})),[.5,0,0],[0,0,-Math.PI/2]],[new THREE.Line(lineXGeometry,new GizmoLineMaterial({color:16711680}))]],Y:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:65280})),[0,.5,0]],[new THREE.Line(lineYGeometry,new GizmoLineMaterial({color:65280}))]],Z:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:255})),[0,0,.5],[Math.PI/2,0,0]],[new THREE.Line(lineZGeometry,new GizmoLineMaterial({color:255}))]],XYZ:[[new THREE.Mesh(new THREE.OctahedronGeometry(.1,0),new GizmoMaterial({color:16777215,opacity:.25})),[0,0,0],[0,0,0]]],XY:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.29,.29),new GizmoMaterial({color:16776960,opacity:.25})),[.15,.15,0]]],YZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.29,.29),new GizmoMaterial({color:65535,opacity:.25})),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.29,.29),new GizmoMaterial({color:16711935,opacity:.25})),[.15,0,.15],[-Math.PI/2,0,0]]]},this.pickerGizmos={X:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[0,.6,0]]],Z:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[0,0,.6],[Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.OctahedronGeometry(.2,0),pickerMaterial)]],XY:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.4,.4),pickerMaterial),[.2,.2,0]]],YZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.4,.4),pickerMaterial),[0,.2,.2],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.4,.4),pickerMaterial),[.2,0,.2],[-Math.PI/2,0,0]]]},this.setActivePlane=function(axis,eye){var tempMatrix=new THREE.Matrix4;eye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes.XY.matrixWorld))),"X"===axis&&(this.activePlane=this.planes.XY,Math.abs(eye.y)>Math.abs(eye.z)&&(this.activePlane=this.planes.XZ)),"Y"===axis&&(this.activePlane=this.planes.XY,Math.abs(eye.x)>Math.abs(eye.z)&&(this.activePlane=this.planes.YZ)),"Z"===axis&&(this.activePlane=this.planes.XZ,Math.abs(eye.x)>Math.abs(eye.y)&&(this.activePlane=this.planes.YZ)),"XYZ"===axis&&(this.activePlane=this.planes.XYZE),"XY"===axis&&(this.activePlane=this.planes.XY),"YZ"===axis&&(this.activePlane=this.planes.YZ),"XZ"===axis&&(this.activePlane=this.planes.XZ)},this.init()},THREE.TransformGizmoTranslate.prototype=Object.create(THREE.TransformGizmo.prototype),THREE.TransformGizmoTranslate.prototype.constructor=THREE.TransformGizmoTranslate,THREE.TransformGizmoRotate=function(){THREE.TransformGizmo.call(this);var CircleGeometry=function(radius,facing,arc){var geometry=new THREE.BufferGeometry,vertices=[];arc=arc?arc:1;for(var i=0;64*arc>=i;++i)"x"===facing&&vertices.push(0,Math.cos(i/32*Math.PI)*radius,Math.sin(i/32*Math.PI)*radius),"y"===facing&&vertices.push(Math.cos(i/32*Math.PI)*radius,0,Math.sin(i/32*Math.PI)*radius),"z"===facing&&vertices.push(Math.sin(i/32*Math.PI)*radius,Math.cos(i/32*Math.PI)*radius,0);return geometry.addAttribute("position",new THREE.Float32Attribute(vertices,3)),geometry};this.handleGizmos={X:[[new THREE.Line(new CircleGeometry(1,"x",.5),new GizmoLineMaterial({color:16711680}))]],Y:[[new THREE.Line(new CircleGeometry(1,"y",.5),new GizmoLineMaterial({color:65280}))]],Z:[[new THREE.Line(new CircleGeometry(1,"z",.5),new GizmoLineMaterial({color:255}))]],E:[[new THREE.Line(new CircleGeometry(1.25,"z",1),new GizmoLineMaterial({color:13421568}))]],XYZE:[[new THREE.Line(new CircleGeometry(1,"z",1),new GizmoLineMaterial({color:7895160}))]]},this.pickerGizmos={X:[[new THREE.Mesh(new THREE.TorusGeometry(1,.12,4,12,Math.PI),pickerMaterial),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.TorusGeometry(1,.12,4,12,Math.PI),pickerMaterial),[0,0,0],[Math.PI/2,0,0]]],Z:[[new THREE.Mesh(new THREE.TorusGeometry(1,.12,4,12,Math.PI),pickerMaterial),[0,0,0],[0,0,-Math.PI/2]]],E:[[new THREE.Mesh(new THREE.TorusGeometry(1.25,.12,2,24),pickerMaterial)]],XYZE:[[new THREE.Mesh(new THREE.Geometry)]]},this.setActivePlane=function(axis){"E"===axis&&(this.activePlane=this.planes.XYZE),"X"===axis&&(this.activePlane=this.planes.YZ),"Y"===axis&&(this.activePlane=this.planes.XZ),"Z"===axis&&(this.activePlane=this.planes.XY)},this.update=function(rotation,eye2){THREE.TransformGizmo.prototype.update.apply(this,arguments);var tempMatrix=({handles:this.handles,pickers:this.pickers},new THREE.Matrix4),worldRotation=new THREE.Euler(0,0,1),tempQuaternion=new THREE.Quaternion,unitX=new THREE.Vector3(1,0,0),unitY=new THREE.Vector3(0,1,0),unitZ=new THREE.Vector3(0,0,1),quaternionX=new THREE.Quaternion,quaternionY=new THREE.Quaternion,quaternionZ=new THREE.Quaternion,eye=eye2.clone();worldRotation.copy(this.planes.XY.rotation),tempQuaternion.setFromEuler(worldRotation),tempMatrix.makeRotationFromQuaternion(tempQuaternion).getInverse(tempMatrix),eye.applyMatrix4(tempMatrix),this.traverse(function(child){tempQuaternion.setFromEuler(worldRotation),"X"===child.name&&(quaternionX.setFromAxisAngle(unitX,Math.atan2(-eye.y,eye.z)),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionX),child.quaternion.copy(tempQuaternion)),"Y"===child.name&&(quaternionY.setFromAxisAngle(unitY,Math.atan2(eye.x,eye.z)),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionY),child.quaternion.copy(tempQuaternion)),"Z"===child.name&&(quaternionZ.setFromAxisAngle(unitZ,Math.atan2(eye.y,eye.x)),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionZ),child.quaternion.copy(tempQuaternion))})},this.init()},THREE.TransformGizmoRotate.prototype=Object.create(THREE.TransformGizmo.prototype),THREE.TransformGizmoRotate.prototype.constructor=THREE.TransformGizmoRotate,THREE.TransformGizmoScale=function(){THREE.TransformGizmo.call(this);var arrowGeometry=new THREE.Geometry,mesh=new THREE.Mesh(new THREE.BoxGeometry(.125,.125,.125));mesh.position.y=.5,mesh.updateMatrix(),arrowGeometry.merge(mesh.geometry,mesh.matrix);var lineXGeometry=new THREE.BufferGeometry;lineXGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,1,0,0],3));var lineYGeometry=new THREE.BufferGeometry;lineYGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,1,0],3));var lineZGeometry=new THREE.BufferGeometry;lineZGeometry.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,0,1],3)),this.handleGizmos={X:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:16711680})),[.5,0,0],[0,0,-Math.PI/2]],[new THREE.Line(lineXGeometry,new GizmoLineMaterial({color:16711680}))]],Y:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:65280})),[0,.5,0]],[new THREE.Line(lineYGeometry,new GizmoLineMaterial({color:65280}))]],Z:[[new THREE.Mesh(arrowGeometry,new GizmoMaterial({color:255})),[0,0,.5],[Math.PI/2,0,0]],[new THREE.Line(lineZGeometry,new GizmoLineMaterial({color:255}))]],XYZ:[[new THREE.Mesh(new THREE.BoxGeometry(.125,.125,.125),new GizmoMaterial({color:16777215,opacity:.25}))]]},this.pickerGizmos={X:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[0,.6,0]]],Z:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,1,4,1,!1),pickerMaterial),[0,0,.6],[Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.BoxGeometry(.4,.4,.4),pickerMaterial)]]},this.setActivePlane=function(axis,eye){var tempMatrix=new THREE.Matrix4;eye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes.XY.matrixWorld))),"X"===axis&&(this.activePlane=this.planes.XY,Math.abs(eye.y)>Math.abs(eye.z)&&(this.activePlane=this.planes.XZ)),"Y"===axis&&(this.activePlane=this.planes.XY,Math.abs(eye.x)>Math.abs(eye.z)&&(this.activePlane=this.planes.YZ)),"Z"===axis&&(this.activePlane=this.planes.XZ,Math.abs(eye.x)>Math.abs(eye.y)&&(this.activePlane=this.planes.YZ)),"XYZ"===axis&&(this.activePlane=this.planes.XYZE)},this.init()},THREE.TransformGizmoScale.prototype=Object.create(THREE.TransformGizmo.prototype),THREE.TransformGizmoScale.prototype.constructor=THREE.TransformGizmoScale;var TransformControls=function(camera,domElement){function onPointerHover(event){if(void 0!==scope.object&&_dragging!==!0&&(void 0===event.button||0===event.button)){var pointer=event.changedTouches?event.changedTouches[0]:event,intersect=intersectObjects(pointer,_gizmo[_mode].pickers.children),axis=null;intersect&&(axis=intersect.object.name,event.preventDefault()),scope.axis!==axis&&(scope.axis=axis,scope.update(),scope.dispatchEvent(changeEvent))}}function onPointerDown(event){if(void 0!==scope.object&&_dragging!==!0&&(void 0===event.button||0===event.button)){var pointer=event.changedTouches?event.changedTouches[0]:event;if(0===pointer.button||void 0===pointer.button){var intersect=intersectObjects(pointer,_gizmo[_mode].pickers.children);if(intersect){event.preventDefault(),event.stopPropagation(),scope.dispatchEvent(mouseDownEvent),scope.axis=intersect.object.name,scope.update(),eye.copy(camPosition).sub(worldPosition).normalize(),_gizmo[_mode].setActivePlane(scope.axis,eye);var planeIntersect=intersectObjects(pointer,[_gizmo[_mode].activePlane]);planeIntersect&&(oldPosition.copy(scope.object.position),oldScale.copy(scope.object.scale),oldRotationMatrix.extractRotation(scope.object.matrix),worldRotationMatrix.extractRotation(scope.object.matrixWorld),parentRotationMatrix.extractRotation(scope.object.parent.matrixWorld),parentScale.setFromMatrixScale(tempMatrix.getInverse(scope.object.parent.matrixWorld)),offset.copy(planeIntersect.point))}}_dragging=!0}}function onPointerMove(event){if(void 0!==scope.object&&null!==scope.axis&&_dragging!==!1&&(void 0===event.button||0===event.button)){var pointer=event.changedTouches?event.changedTouches[0]:event,planeIntersect=intersectObjects(pointer,[_gizmo[_mode].activePlane]);planeIntersect!==!1&&(event.preventDefault(),event.stopPropagation(),point.copy(planeIntersect.point),"translate"===_mode?(point.sub(offset),point.multiply(parentScale),"local"===scope.space&&(point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix)),-1===scope.axis.search("X")&&(point.x=0),-1===scope.axis.search("Y")&&(point.y=0),-1===scope.axis.search("Z")&&(point.z=0),point.applyMatrix4(oldRotationMatrix),scope.object.position.copy(oldPosition),scope.object.position.add(point)),("world"===scope.space||-1!==scope.axis.search("XYZ"))&&(-1===scope.axis.search("X")&&(point.x=0),-1===scope.axis.search("Y")&&(point.y=0),-1===scope.axis.search("Z")&&(point.z=0),point.applyMatrix4(tempMatrix.getInverse(parentRotationMatrix)),scope.object.position.copy(oldPosition),scope.object.position.add(point)),null!==scope.snap&&(-1!==scope.axis.search("X")&&(scope.object.position.x=Math.round(scope.object.position.x/scope.snap)*scope.snap),-1!==scope.axis.search("Y")&&(scope.object.position.y=Math.round(scope.object.position.y/scope.snap)*scope.snap),-1!==scope.axis.search("Z")&&(scope.object.position.z=Math.round(scope.object.position.z/scope.snap)*scope.snap))):"scale"===_mode?(point.sub(offset),point.multiply(parentScale),"local"===scope.space&&("XYZ"===scope.axis?(scale=1+point.y/50,scope.object.scale.x=oldScale.x*scale,scope.object.scale.y=oldScale.y*scale,scope.object.scale.z=oldScale.z*scale):(point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix)),"X"===scope.axis&&(scope.object.scale.x=oldScale.x*(1+point.x/50)),"Y"===scope.axis&&(scope.object.scale.y=oldScale.y*(1+point.y/50)),"Z"===scope.axis&&(scope.object.scale.z=oldScale.z*(1+point.z/50))))):"rotate"===_mode&&(point.sub(worldPosition),point.multiply(parentScale),tempVector.copy(offset).sub(worldPosition),tempVector.multiply(parentScale),"E"===scope.axis?(point.applyMatrix4(tempMatrix.getInverse(lookAtMatrix)),tempVector.applyMatrix4(tempMatrix.getInverse(lookAtMatrix)),rotation.set(Math.atan2(point.z,point.y),Math.atan2(point.x,point.z),Math.atan2(point.y,point.x)),offsetRotation.set(Math.atan2(tempVector.z,tempVector.y),Math.atan2(tempVector.x,tempVector.z),Math.atan2(tempVector.y,tempVector.x)),tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix)),quaternionE.setFromAxisAngle(eye,rotation.z-offsetRotation.z),quaternionXYZ.setFromRotationMatrix(worldRotationMatrix),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionE),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionXYZ),scope.object.quaternion.copy(tempQuaternion)):"XYZE"===scope.axis?(quaternionE.setFromEuler(point.clone().cross(tempVector).normalize()),tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix)),quaternionX.setFromAxisAngle(quaternionE,-point.clone().angleTo(tempVector)),quaternionXYZ.setFromRotationMatrix(worldRotationMatrix),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionX),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionXYZ),scope.object.quaternion.copy(tempQuaternion)):"local"===scope.space?(point.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix)),tempVector.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix)),rotation.set(Math.atan2(point.z,point.y),Math.atan2(point.x,point.z),Math.atan2(point.y,point.x)),
offsetRotation.set(Math.atan2(tempVector.z,tempVector.y),Math.atan2(tempVector.x,tempVector.z),Math.atan2(tempVector.y,tempVector.x)),quaternionXYZ.setFromRotationMatrix(oldRotationMatrix),quaternionX.setFromAxisAngle(unitX,rotation.x-offsetRotation.x),quaternionY.setFromAxisAngle(unitY,rotation.y-offsetRotation.y),quaternionZ.setFromAxisAngle(unitZ,rotation.z-offsetRotation.z),"X"===scope.axis&&quaternionXYZ.multiplyQuaternions(quaternionXYZ,quaternionX),"Y"===scope.axis&&quaternionXYZ.multiplyQuaternions(quaternionXYZ,quaternionY),"Z"===scope.axis&&quaternionXYZ.multiplyQuaternions(quaternionXYZ,quaternionZ),scope.object.quaternion.copy(quaternionXYZ)):"world"===scope.space&&(rotation.set(Math.atan2(point.z,point.y),Math.atan2(point.x,point.z),Math.atan2(point.y,point.x)),offsetRotation.set(Math.atan2(tempVector.z,tempVector.y),Math.atan2(tempVector.x,tempVector.z),Math.atan2(tempVector.y,tempVector.x)),tempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix)),quaternionX.setFromAxisAngle(unitX,rotation.x-offsetRotation.x),quaternionY.setFromAxisAngle(unitY,rotation.y-offsetRotation.y),quaternionZ.setFromAxisAngle(unitZ,rotation.z-offsetRotation.z),quaternionXYZ.setFromRotationMatrix(worldRotationMatrix),"X"===scope.axis&&tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionX),"Y"===scope.axis&&tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionY),"Z"===scope.axis&&tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionZ),tempQuaternion.multiplyQuaternions(tempQuaternion,quaternionXYZ),scope.object.quaternion.copy(tempQuaternion))),scope.update(),scope.dispatchEvent(changeEvent),scope.dispatchEvent(objectChangeEvent))}}function onPointerUp(event){(void 0===event.button||0===event.button)&&(_dragging&&null!==scope.axis&&(mouseUpEvent.mode=_mode,scope.dispatchEvent(mouseUpEvent)),_dragging=!1,onPointerHover(event))}function intersectObjects(pointer,objects){var rect=domElement.getBoundingClientRect(),x=(pointer.clientX-rect.left)/rect.width,y=(pointer.clientY-rect.top)/rect.height;pointerVector.set(2*x-1,-(2*y)+1),ray.setFromCamera(pointerVector,camera);var intersections=ray.intersectObjects(objects,!0);return intersections[0]?intersections[0]:!1}THREE.Object3D.call(this),domElement=void 0!==domElement?domElement:document,this.object=void 0,this.visible=!1,this.snap=null,this.space="world",this.size=1,this.axis=null;var scope=this,_mode="translate",_dragging=!1,_gizmo={translate:new THREE.TransformGizmoTranslate,rotate:new THREE.TransformGizmoRotate,scale:new THREE.TransformGizmoScale};for(var type in _gizmo){var gizmoObj=_gizmo[type];gizmoObj.visible=type===_mode,this.add(gizmoObj)}var changeEvent={type:"change"},mouseDownEvent={type:"mouseDown"},mouseUpEvent={type:"mouseUp",mode:_mode},objectChangeEvent={type:"objectChange"},ray=new THREE.Raycaster,pointerVector=new THREE.Vector2,point=new THREE.Vector3,offset=new THREE.Vector3,rotation=new THREE.Vector3,offsetRotation=new THREE.Vector3,scale=1,lookAtMatrix=new THREE.Matrix4,eye=new THREE.Vector3,tempMatrix=new THREE.Matrix4,tempVector=new THREE.Vector3,tempQuaternion=new THREE.Quaternion,unitX=new THREE.Vector3(1,0,0),unitY=new THREE.Vector3(0,1,0),unitZ=new THREE.Vector3(0,0,1),quaternionXYZ=new THREE.Quaternion,quaternionX=new THREE.Quaternion,quaternionY=new THREE.Quaternion,quaternionZ=new THREE.Quaternion,quaternionE=new THREE.Quaternion,oldPosition=new THREE.Vector3,oldScale=new THREE.Vector3,oldRotationMatrix=new THREE.Matrix4,parentRotationMatrix=new THREE.Matrix4,parentScale=new THREE.Vector3,worldPosition=new THREE.Vector3,worldRotation=new THREE.Euler,worldRotationMatrix=new THREE.Matrix4,camPosition=new THREE.Vector3,camRotation=new THREE.Euler;domElement.addEventListener("mousedown",onPointerDown,!1),domElement.addEventListener("touchstart",onPointerDown,!1),domElement.addEventListener("mousemove",onPointerHover,!1),domElement.addEventListener("touchmove",onPointerHover,!1),domElement.addEventListener("mousemove",onPointerMove,!1),domElement.addEventListener("touchmove",onPointerMove,!1),domElement.addEventListener("mouseup",onPointerUp,!1),domElement.addEventListener("mouseout",onPointerUp,!1),domElement.addEventListener("touchend",onPointerUp,!1),domElement.addEventListener("touchcancel",onPointerUp,!1),domElement.addEventListener("touchleave",onPointerUp,!1),this.dispose=function(){domElement.removeEventListener("mousedown",onPointerDown),domElement.removeEventListener("touchstart",onPointerDown),domElement.removeEventListener("mousemove",onPointerHover),domElement.removeEventListener("touchmove",onPointerHover),domElement.removeEventListener("mousemove",onPointerMove),domElement.removeEventListener("touchmove",onPointerMove),domElement.removeEventListener("mouseup",onPointerUp),domElement.removeEventListener("mouseout",onPointerUp),domElement.removeEventListener("touchend",onPointerUp),domElement.removeEventListener("touchcancel",onPointerUp),domElement.removeEventListener("touchleave",onPointerUp)},this.attach=function(object){this.object=object,this.visible=!0,this.update()},this.detach=function(){this.object=void 0,this.visible=!1,this.axis=null},this.setMode=function(mode){_mode=mode?mode:_mode,"scale"===_mode&&(scope.space="local");for(var type in _gizmo)_gizmo[type].visible=type===_mode;this.update(),scope.dispatchEvent(changeEvent)},this.setSnap=function(snap){scope.snap=snap},this.setSize=function(size){scope.size=size,this.update(),scope.dispatchEvent(changeEvent)},this.setSpace=function(space){scope.space=space,this.update(),scope.dispatchEvent(changeEvent)},this.update=function(){void 0!==scope.object&&(scope.object.updateMatrixWorld(),worldPosition.setFromMatrixPosition(scope.object.matrixWorld),worldRotation.setFromRotationMatrix(tempMatrix.extractRotation(scope.object.matrixWorld)),camera.updateMatrixWorld(),camPosition.setFromMatrixPosition(camera.matrixWorld),camRotation.setFromRotationMatrix(tempMatrix.extractRotation(camera.matrixWorld)),scale=worldPosition.distanceTo(camPosition)/6*scope.size,this.position.copy(worldPosition),this.scale.set(scale,scale,scale),eye.copy(camPosition).sub(worldPosition).normalize(),"local"===scope.space?_gizmo[_mode].update(worldRotation,eye):"world"===scope.space&&_gizmo[_mode].update(new THREE.Euler,eye),_gizmo[_mode].highlight(scope.axis))}};return TransformControls.prototype=Object.create(THREE.Object3D.prototype),TransformControls.prototype.constructor=THREE.TransformControls,TransformControls}(),FOUR.ViewIndex=function(){function ViewIndex(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.SELECTION_STRATEGY={CONTAINED:0,CROSSING:1},self.filter=null,self.filters={all:self.selectAll,nearest:self.selectNearest,objects:self.selectObjects,points:self.selectPoints},self.frustum=new THREE.Frustum,self.quadtree=new Quadtree({height:config.viewport.domElement.clientHeight,width:config.viewport.domElement.clientWidth}),self.viewport=config.viewport,Object.keys(config).forEach(function(key){self[key]=config[key]})}return ViewIndex.prototype=Object.create(THREE.EventDispatcher.prototype),ViewIndex.prototype.constructor=ViewIndex,ViewIndex.prototype.clear=function(controller,name){},ViewIndex.prototype.disable=function(){var self=this;self.enabled=!1,self.hideMarquee(),Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},ViewIndex.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;self.camera=self.viewport.getCamera(),addListener(window,"resize",self.onWindowResize),self.buildIndex()},ViewIndex.prototype.get=function(p1,p2,strategy){throw new Error("not implemented")},ViewIndex.prototype.getNear=function(pos,radius){throw new Error("not implemented")},ViewIndex.prototype.getNearest=function(pos,radius){throw new Error("not implemented")},ViewIndex.prototype.index=function(viewport,camera,objs){var matrix,self=this,total=0;self.quadtree=new Quadtree({height:viewport.domElement.clientHeight,width:viewport.domElement.clientWidth}),matrix=(new THREE.Matrix4).multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse),self.frustum.setFromMatrix(matrix),objs.forEach(function(child){child.matrixWorldNeedsUpdate&&child.updateMatrixWorld(),child.geometry&&self.frustum.intersectsObject(child)&&(child instanceof THREE.Points?total+=self.indexPointsVertices(child,self.quadtree):child instanceof THREE.Object3D&&(self.indexObject3DVertices(child,self.quadtree),total+=1))}),console.info("Added %s objects to the view index",total),self.dispatchEvent({type:"update"})},ViewIndex.prototype.indexObject3DVertices=function(obj,index){var height,p,width,x,y,maxX=0,maxY=0,minX=this.viewport.domElement.clientWidth,minY=this.viewport.domElement.clientHeight,self=this;obj.matrixWorldNeedsUpdate&&obj.updateMatrixWorld(),obj.geometry.vertices.forEach(function(vertex){p=vertex.clone(),p.applyMatrix4(obj.matrixWorld),p=FOUR.utils.getVertexScreenCoordinates(p,self.camera,self.viewport.domElement.clientWidth,self.viewport.domElement.clientHeight),maxX=p.x>maxX?p.x:maxX,maxY=p.y>maxY?p.y:maxY,minX=p.x<minX?p.x:minX,minY=p.y<minY?p.y:minY}),height=maxY-minY>0?maxY-minY:0,width=maxX-minX>0?maxX-minX:0,x=minX>=0?minX:0,y=minY>=0?minY:0,index.push({uuid:obj.uuid.slice(),x:x,y:y,height:height,width:width,index:-1,type:"THREE.Object3D"})},ViewIndex.prototype.indexPointsVertices=function(obj,index){var i,p,vertex,self=this,total=0;for(i=0;i<obj.geometry.vertices.length;i++)total+=1,vertex=obj.geometry.vertices[i],p=FOUR.utils.getObjectScreenCoordinates(vertex,self.camera,self.viewport.domElement.clientWidth,self.viewport.domElement.clientHeight),p.x>=0&&p.y>=0&&(index.push({uuid:obj.uuid.slice(),x:Number(p.x),y:Number(p.y),width:0,height:0,index:i,type:"THREE.Points"}),console.info({uuid:obj.uuid.slice(),x:Number(p.x),y:Number(p.y),width:0,height:0,index:i,type:"THREE.Points"}));return total},ViewIndex.prototype.selectAll=function(){},ViewIndex.prototype.selectNearest=function(){},ViewIndex.prototype.selectObjects=function(){},ViewIndex.prototype.selectPoints=function(){},ViewIndex}(),FOUR.Viewport3D=function(){function Viewport3D(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.EVENT={BACKGROUND_CHANGE:{type:"background-change"},CAMERA_CHANGE:{type:"camera-change"},CONTROLLER_CHANGE:{type:"controller-change"}},self.backgroundColor=config.backgroundColor||new THREE.Color(0,1),self.camera=config.camera,self.clock=new THREE.Clock,self.continuousUpdate=!1,self.controller=null,self.controllers={},self.delta=0,self.domElement=config.domElement,self.listeners={},self.renderer=new THREE.WebGLRenderer({antialias:!0}),self.renderer.setClearColor(self.backgroundColor),self.renderer.setSize(self.domElement.clientWidth,self.domElement.clientHeight),self.renderer.shadowMap.enabled=!0,self.scene=config.scene,self.domElement.appendChild(self.renderer.domElement),self.domElement.addEventListener("contextmenu",self.onContextMenu.bind(self)),self.scene.addEventListener("update",self.render.bind(self),!1),window.addEventListener("resize",self.onWindowResize.bind(self),!1),Object.keys(config).forEach(function(key){self[key]=config[key]})}return Viewport3D.prototype=Object.create(THREE.EventDispatcher.prototype),Viewport3D.prototype.constructor=Viewport3D,Viewport3D.prototype.addController=function(controller,name){this.controllers[name]=controller},Viewport3D.prototype.getCamera=function(){return this.camera},Viewport3D.prototype.getScene=function(){return this.scene},Viewport3D.prototype.onContextMenu=function(event){event.preventDefault()},Viewport3D.prototype.onWindowResize=function(){var ctrl,self=this,height=self.domElement.clientHeight,width=self.domElement.clientWidth;self.camera.aspect=width/height,self.camera.updateProjectionMatrix(),Object.keys(self.controllers).forEach(function(key){ctrl=self.controllers[key],"function"==typeof ctrl.handleResize&&ctrl.handleResize()}),self.renderer.setSize(width,height),self.render()},Viewport3D.prototype.render=function(){this.renderer.render(this.scene,this.camera)},Viewport3D.prototype.setActiveController=function(name){var self=this;self.controller&&(self.controller.disable(),self.controller.removeEventListener(self.render)),console.info("Set active viewport controller to",name),self.controller=self.controllers[name],self.controller.addEventListener("update",self.render.bind(self),!1),self.controller.enable(),self.dispatchEvent(self.EVENT.CONTROLLER_CHANGE)},Viewport3D.prototype.setBackgroundColor=function(color){var self=this;self.background=color,self.renderer.setClearColor(self.backgroundColor),self.dispatchEvent(self.EVENT.BACKGROUND_CHANGE),self.render()},Viewport3D.prototype.setCamera=function(camera){var self=this;self.camera=camera,self.camera.aspect=self.domElement.clientWidth/self.domElement.clientHeight,self.camera.updateProjectionMatrix(),self.dispatchEvent(self.EVENT.CAMERA_CHANGE),self.render()},Viewport3D.prototype.update=function(force){var self=this;(self.continuousUpdate||"boolean"==typeof force&&force)&&(self.updateOnce(),requestAnimationFrame(self.update.bind(self)))},Viewport3D.prototype.updateOnce=function(){var self=this;TWEEN.update(),self.controller&&(self.delta=self.clock.getDelta(),self.controller.update(self.delta))},Viewport3D}(),FOUR.Overlay=function(){function Overlay(config){THREE.EventDispatcher.call(this);var self=this;self.POSITION={CENTER:0,TOP:1,BOTTOM:2,LEFT:3,RIGHT:4,FIXED:6},self.domElement=config.domElement||config.viewport.domElement,self.elements={},self.enabled=!1,self.listeners={},self.viewport=config.viewport,Object.keys(config).forEach(function(key){self[key]=config[key]})}return Overlay.prototype=Object.create(THREE.EventDispatcher.prototype),Overlay.prototype.add=function(config){return config.id="overlay-"+Date.now(),config.element=document.createElement("div"),config.element.className=config.className||"label",config.element.id=config.id,config.element.innerHTML=config.innerHTML,this.domElement.appendChild(config.element),this.elements[config.id]=config,this.update(),config},Overlay.prototype.clear=function(){var self=this;Object.keys(this.elements).forEach(function(id){self.remove(id)})},Overlay.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},Overlay.prototype.enable=function(){var self=this;self.enabled=!0},Overlay.prototype.onMouseMove=function(event){},Overlay.prototype.onMouseOver=function(event){},Overlay.prototype.onMouseUp=function(event){},Overlay.prototype.remove=function(id){var el=document.getElementById(id);this.domElement.removeChild(el),delete this.elements[id]},Overlay.prototype.update=function(){var dummy,el,obj,offset,screen,self=this,camera=this.viewport.getCamera(),scene=this.viewport.getScene();Object.keys(this.elements).forEach(function(key){el=self.elements[key],el.position!==self.POSITION.FIXED?(offset=el.offset||0,obj=scene.getObjectByProperty("uuid",el.target),el.index,obj instanceof THREE.Line?(obj.geometry.computeBoundingSphere(),dummy=new THREE.Object3D,dummy.position.copy(obj.geometry.boundingSphere.center),screen=FOUR.utils.getObjectScreenCoordinates(dummy,camera,self.viewport.domElement.clientWidth,self.viewport.domElement.clientHeight)):screen=FOUR.utils.getObjectScreenCoordinates(obj,camera,self.viewport.domElement.clientWidth,self.viewport.domElement.clientHeight),el.element.style.left=screen.x+offset+"px",el.element.style.top=screen.y+offset+"px"):(el.element.style.left=el.left+offset+"px",el.element.style.top=el.top+offset+"px")})},Overlay}(),FOUR.ViewAxis=function(){function ViewAxis(config){THREE.EventDispatcher.call(this);var self=this;self.AXIS_OPACITY=.8,self.AXIS_THICKNESS=2,self.FACE_COLOUR=4874096,self.FACE_OPACITY_MOUSE_NOT_OVER=0,self.FACE_OPACITY_MOUSE_OVER=.8,self.MODES={SELECT:0,READONLY:1},self.ROTATION_0=0,self.ROTATION_90=Math.PI/2,self.ROTATION_180=Math.PI,self.ROTATION_270=1.5*Math.PI,self.ROTATION_360=2*Math.PI,self.axis=null,self.axisXYPlane=null,self.camera=null,self.control=new THREE.Object3D,self.domElement=config.domElement,self.enable={axis:!0,labels:!0,xyPlane:!0},self.fov=60,self.label={x:null,y:null,z:null},self.labelOffset=.1,self.labels=new THREE.Object3D,self.material={blue:new THREE.LineBasicMaterial({color:255,linewidth:self.AXIS_THICKNESS,opacity:self.AXIS_OPACITY,transparent:!0}),green:new THREE.LineBasicMaterial({color:65280,linewidth:self.AXIS_THICKNESS,opacity:self.AXIS_OPACITY,transparent:!0}),red:new THREE.LineBasicMaterial({color:16711680,linewidth:self.AXIS_THICKNESS,opacity:self.AXIS_OPACITY,transparent:!0})},self.mouse=new THREE.Vector2,self.raycaster=new THREE.Raycaster,self.scene=new THREE.Scene,self.textCfg={size:.35,height:.01},self.viewport=config.viewport,self.up=new THREE.Vector3(0,0,1),Object.keys(config).forEach(function(key){self[key]=config[key]}),self.renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),self.renderer.setSize(self.domElement.clientWidth,self.domElement.clientHeight),self.renderer.shadowMap.enabled=!1,self.domElement.appendChild(self.renderer.domElement),self.setupCamera(),self.setupGeometry(),self.setupLights(),self.setupNavigation(),window.addEventListener("mousemove",self.update.bind(self)),window.addEventListener("mousemove",self.render.bind(self))}return ViewAxis.prototype=Object.create(THREE.EventDispatcher.prototype),ViewAxis.prototype.createAxis=function(){var geometry,line,axis=new THREE.Object3D,self=this;return axis.name="axis",geometry=new THREE.Geometry,geometry.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(1,0,0)),line=new THREE.Line(geometry,self.material.red),line.name="x",axis.add(line),geometry=new THREE.Geometry,geometry.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0)),line=new THREE.Line(geometry,self.material.green),line.name="y",axis.add(line),geometry=new THREE.Geometry,geometry.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,1)),line=new THREE.Line(geometry,self.material.blue),line.name="z",axis.add(line),axis},ViewAxis.prototype.createLabels=function(){var geometry,labels=new THREE.Object3D,self=this;return labels.name="labels",geometry=new THREE.TextGeometry("x",self.textCfg),self.label.x=new THREE.Mesh(geometry,self.material.red),self.label.x.name="x",self.label.x.position.set(1+self.labelOffset,0,0),self.labels.add(self.label.x),geometry=new THREE.TextGeometry("y",self.textCfg),self.label.y=new THREE.Mesh(geometry,self.material.green),self.label.y.name="y",self.label.y.position.set(0,1+self.labelOffset,0),self.labels.add(self.label.y),geometry=new THREE.TextGeometry("z",self.textCfg),self.label.z=new THREE.Mesh(geometry,self.material.blue),self.label.z.name="z",self.label.z.position.set(0,0,1+self.labelOffset),self.labels.add(self.label.z),labels},ViewAxis.prototype.createXYPlane=function(){var plane=new THREE.Object3D,geometry=new THREE.PlaneGeometry(.7,.7),material=new THREE.MeshBasicMaterial({color:16711935,opacity:.5,transparent:!0}),mesh=new THREE.Mesh(geometry,material);return mesh.position.set(.35,.35,0),plane.add(mesh),plane.name="xy_plane",plane},ViewAxis.prototype.onMouseMove=function(event){var self=this;self.mouse.x=event.offsetX/self.domElement.clientWidth*2-1,self.mouse.y=2*-(event.offsetY/self.domElement.clientHeight)+1,self.raycaster.setFromCamera(self.mouse,self.camera),self.scene.traverse(function(obj){"labels"!==obj.name&&obj.material&&(obj.material.opacity=self.FACE_OPACITY_MOUSE_NOT_OVER)});var intersects=self.raycaster.intersectObjects(self.scene.children,!0);intersects.length>0&&"labels"!==intersects[0].object.name&&(intersects[0].object.material.opacity=self.FACE_OPACITY_MOUSE_OVER)},ViewAxis.prototype.onMouseOver=function(event){},ViewAxis.prototype.onMouseUp=function(event){var self=this;self.mouse.x=event.offsetX/self.domElement.clientWidth*2-1,self.mouse.y=2*-(event.offsetX/self.domElement.clientWidth)+1,self.raycaster.setFromCamera(self.mouse,self.camera),self.selection=[];var intersects=self.raycaster.intersectObjects(self.scene.children,!0);intersects.length>0&&self.setView(intersects[0].object.name)},ViewAxis.prototype.render=function(){var self=this;self.renderer.render(self.scene,self.camera)},ViewAxis.prototype.setupCamera=function(){var self=this;self.camera=new THREE.PerspectiveCamera(self.fov,self.domElement.clientWidth/self.domElement.clientHeight,.1,1e3),self.camera.position.x=0,self.camera.position.y=-2.5,self.camera.position.z=0,self.camera.up=new THREE.Vector3(0,0,1),self.camera.lookAt(new THREE.Vector3(0,0,0))},ViewAxis.prototype.setupGeometry=function(){var self=this;self.enable.axis&&(self.axis=self.createAxis(),self.scene.add(self.axis),self.enable.labels&&(self.createLabels(),self.axis.add(self.labels)),self.enable.xyPlane&&(self.axisXYPlane=self.createXYPlane(),self.axis.add(self.axisXYPlane)))},ViewAxis.prototype.setupLights=function(){var light=new THREE.AmbientLight(4210752),self=this;self.scene.add(light),light=new THREE.DirectionalLight(16777215),light.position.set(1,1,1),self.scene.add(light)},ViewAxis.prototype.setupNavigation=function(){},ViewAxis.prototype.update=function(){var self=this;Object.keys(self.label).forEach(function(key){self.label[key].lookAt(self.camera.position)}),requestAnimationFrame(self.render.bind(self))},ViewAxis.prototype.updateOrientation=function(){var self=this,identity=(new THREE.Matrix4).identity();identity.elements[0]=-1,identity.elements[10]=-1;var euler=new THREE.Euler(self.viewport.camera.rotation.x,self.viewport.camera.rotation.y,self.viewport.camera.rotation.z,"XZY");self.axis.quaternion.setFromEuler(euler).inverse(),self.axis.applyMatrix(identity),self.render()},ViewAxis}(),FOUR.Viewcube=function(){function Viewcube(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.CUBE_FACE_SIZE=70,self.CUBE_EDGE_SIZE=15,self.CUBE_LABEL_SIZE=99,self.COMPASS_COLOR=6710886,self.COMPASS_OPACITY=.8,self.FACE_COLOUR=4874096,self.FACE_OPACITY_MOUSE_OFF=0,self.FACE_OPACITY_MOUSE_NOT_OVER=.1,self.FACE_OPACITY_MOUSE_OVER=.8,self.FACES={TOP:0,FRONT:1,RIGHT:2,BACK:3,LEFT:4,BOTTOM:5,TOP_FRONT_EDGE:6,TOP_RIGHT_EDGE:7,TOP_BACK_EDGE:8,TOP_LEFT_EDGE:9,FRONT_RIGHT_EDGE:10,BACK_RIGHT_EDGE:11,BACK_LEFT_EDGE:12,FRONT_LEFT_EDGE:13,BOTTOM_FRONT_EDGE:14,BOTTOM_RIGHT_EDGE:15,BOTTOM_BACK_EDGE:16,BOTTOM_LEFT_EDGE:17,TOP_FRONT_RIGHT_CORNER:18,TOP_BACK_RIGHT_CORNER:19,TOP_BACK_LEFT_CORNER:20,TOP_FRONT_LEFT_CORNER:21,BOTTOM_FRONT_RIGHT_CORNER:22,BOTTOM_BACK_RIGHT_CORNER:23,BOTTOM_BACK_LEFT_CORNER:24,BOTTOM_FRONT_LEFT_CORNER:25},self.LABELS_HOVER_OFF=.5,self.LABELS_HOVER=1,self.MODES={SELECT:0,READONLY:1},self.OFFSET=1,self.ROTATION_0=0,self.ROTATION_90=Math.PI/2,self.ROTATION_180=Math.PI,self.ROTATION_270=1.5*Math.PI,self.ROTATION_360=2*Math.PI,self.X_AXIS=new THREE.Vector3(1,0,0),self.Y_AXIS=new THREE.Vector3(0,1,0),self.Z_AXIS=new THREE.Vector3(0,0,1),self.camera=null,self.compass=new THREE.Object3D,self.control=new THREE.Object3D,self.cube=new THREE.Object3D,self.display={axis:!1,compass:!0,cube:!0,labels:!0,normals:!1},self.domElement=config.domElement,self.enabled=!1,self.fov=60,self.frontFace=null,self.labelSize=128,self.listeners={},self.materials={compass:null,face:null,faces:[]},self.mouse=new THREE.Vector2,self.raycaster=new THREE.Raycaster,self.renderContinuous=!1,self.scene=new THREE.Scene,self.view=new THREE.Object3D,self.viewport=config.viewport,self.compass.name="compass",self.control.name="control",self.cube.name="cube",Object.keys(config).forEach(function(key){self[key]=config[key]}),self.renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),self.renderer.setSize(self.domElement.clientWidth,self.domElement.clientHeight),self.domElement.appendChild(self.renderer.domElement),self.scene.add(self.control),self.scene.add(self.view),self.setupCamera(),self.setupLights(),self.setupMaterials(),self.setupGeometry(),setTimeout(function(){self.updateOrientation(),self.onMouseLeave()},0)}return Viewcube.prototype=Object.create(THREE.EventDispatcher.prototype),Viewcube.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},Viewcube.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.domElement,"contextmenu",self.onContextMenu),addListener(self.domElement,"mouseenter",self.onMouseEnter),addListener(self.domElement,"mouseleave",self.onMouseLeave),addListener(self.domElement,"mousemove",self.onMouseMove),addListener(self.domElement,"mouseover",self.onMouseOver),addListener(self.domElement,"mouseup",self.onMouseUp),addListener(window,"keydown",self.render),addListener(window,"mousemove",self.render),self.enabled=!0},Viewcube.prototype.getFaceLabel=function(val){var match=null,self=this;return Object.keys(self.FACES).forEach(function(key){self.FACES[key]===val&&(match=key)}),match},Viewcube.prototype.makeCompass=function(name,x,y,z,radius,segments,color,opacity){var obj=new THREE.Object3D,material=new THREE.MeshBasicMaterial({color:color}),circleGeometry=new THREE.CircleGeometry(radius,segments),circle=new THREE.Mesh(circleGeometry,material);return obj.add(circle),obj.name=name,obj.opacity=opacity,obj.position.x=x,obj.position.y=y,obj.position.z=z,obj},Viewcube.prototype.makeCorner=function(name,w,x,y,z,rotations){var face1,face2,face3,geometry,material,obj,self=this;return obj=new THREE.Object3D,material=self.materials.face.clone(),self.materials.faces.push(material),geometry=new THREE.PlaneGeometry(w,w),face1=new THREE.Mesh(geometry,material),face1.name=name,face1.position.setX(w/2),face1.position.setY(w/2),geometry=new THREE.PlaneGeometry(w,w),face2=new THREE.Mesh(geometry,material),face2.name=name,face2.position.setX(w/2),face2.position.setZ(-w/2),face2.rotateOnAxis(new THREE.Vector3(1,0,0),Math.PI/2),geometry=new THREE.PlaneGeometry(w,w),face3=new THREE.Mesh(geometry,material),face3.name=name,face3.position.setY(w/2),face3.position.setZ(-w/2),face3.rotateOnAxis(new THREE.Vector3(0,1,0),-Math.PI/2),obj.add(face1),obj.add(face2),obj.add(face3),obj.name=name,obj.position.x=x,obj.position.y=y,obj.position.z=z,rotations.forEach(function(rotation){obj.rotateOnAxis(rotation.axis,rotation.rad)}),obj},Viewcube.prototype.makeEdge=function(name,w,h,x,y,z,rotations){var face1,face2,geometry,material,obj,self=this;return material=self.materials.face.clone(),self.materials.faces.push(material),obj=new THREE.Object3D,geometry=new THREE.PlaneGeometry(w,h),face1=new THREE.Mesh(geometry,material),face1.name=name,face1.position.setY(h/2),geometry=new THREE.PlaneGeometry(w,h),face2=new THREE.Mesh(geometry,material),face2.name=name,face2.position.setZ(-h/2),face2.rotateOnAxis(new THREE.Vector3(1,0,0),Math.PI/2),obj.add(face1),obj.add(face2),obj.name=name,obj.position.x=x,obj.position.y=y,obj.position.z=z,rotations.forEach(function(rotation){obj.rotateOnAxis(rotation.axis,rotation.rad)}),obj},Viewcube.prototype.makeFace=function(name,w,x,y,z,rotations){var face,geometry,material,self=this;return geometry=new THREE.PlaneGeometry(w,w),material=self.materials.face.clone(),self.materials.faces.push(material),face=new THREE.Mesh(geometry,material),face.name=name,face.position.setX(x),face.position.setY(y),face.position.setZ(z),rotations.forEach(function(rotation){face.rotateOnAxis(rotation.axis,rotation.rad)}),face},Viewcube.prototype.onContextMenu=function(event){event.preventDefault()},Viewcube.prototype.onMouseEnter=function(){var self=this;self.tweenControlOpacity(self.materials.faces,self.FACE_OPACITY_MOUSE_OFF,self.FACE_OPACITY_MOUSE_NOT_OVER),self.tweenControlOpacity(self.materials.labels,self.LABELS_HOVER_OFF,self.LABELS_HOVER)},Viewcube.prototype.onMouseLeave=function(){var self=this;self.tweenControlOpacity(self.materials.face,self.FACE_OPACITY_MOUSE_NOT_OVER,self.FACE_OPACITY_MOUSE_OFF),self.tweenControlOpacity(self.materials.labels,self.LABELS_HOVER,self.LABELS_HOVER_OFF)},Viewcube.prototype.onMouseMove=function(event){var self=this;self.mouse.x=event.offsetX/self.domElement.clientWidth*2-1,self.mouse.y=2*-(event.offsetY/self.domElement.clientHeight)+1,self.raycaster.setFromCamera(self.mouse,self.camera),self.scene.traverse(function(obj){"labels"!==obj.name&&obj.material&&(obj.material.opacity=self.FACE_OPACITY_MOUSE_NOT_OVER)});var intersects=self.raycaster.intersectObjects(self.cube.children,!0);if(intersects.length>0&&"labels"!==intersects[0].object.name){self.getFaceLabel(intersects[0].object.name);intersects[0].object.material.opacity=self.FACE_OPACITY_MOUSE_OVER}},Viewcube.prototype.onMouseOver=function(event){},Viewcube.prototype.onMouseUp=function(event){var self=this;self.mouse.x=event.offsetX/self.domElement.clientWidth*2-1,self.mouse.y=2*-(event.offsetY/self.domElement.clientHeight)+1,self.raycaster.setFromCamera(self.mouse,self.camera);var intersects=self.raycaster.intersectObjects(self.cube.children,!0);if(intersects.length>0){var label=self.getFaceLabel(intersects[0].object.name);console.info("click",label,intersects),self.setView(intersects[0].object.name)}},Viewcube.prototype.render=function(){this.renderer.render(this.scene,this.camera)},Viewcube.prototype.setupCamera=function(){var self=this;self.camera=new THREE.PerspectiveCamera(self.fov,self.domElement.clientWidth/self.domElement.clientHeight,.1,1e3),self.camera.name="camera",self.camera.position.x=0,self.camera.position.y=0,self.camera.position.z=250,self.camera.up=new THREE.Vector3(0,1,0),self.camera.lookAt(new THREE.Vector3(0,0,0)),self.view.add(self.camera)},Viewcube.prototype.setupGeometry=function(){var self=this;if(self.display.cube){var ROTATE_0=0,ROTATE_90=Math.PI/2,ROTATE_180=Math.PI,ROTATE_270=1.5*Math.PI;2*Math.PI;if(self.display.labels){var geometry=new THREE.BoxGeometry(self.CUBE_LABEL_SIZE,self.CUBE_LABEL_SIZE,self.CUBE_LABEL_SIZE),labels=new THREE.Mesh(geometry,self.materials.labels);labels.name="labels",self.cube.add(labels)}var topFace=self.makeFace(self.FACES.TOP,70,0,0,50,[{axis:self.Z_AXIS,rad:ROTATE_90}]),frontFace=self.makeFace(self.FACES.FRONT,70,0,-50,0,[{axis:self.X_AXIS,rad:ROTATE_90}]),rightFace=self.makeFace(self.FACES.RIGHT,70,50,0,0,[{axis:self.X_AXIS,rad:ROTATE_90},{axis:self.Y_AXIS,rad:ROTATE_90}]),backFace=self.makeFace(self.FACES.BACK,70,0,50,0,[{axis:self.X_AXIS,rad:ROTATE_270}]),leftFace=self.makeFace(self.FACES.LEFT,70,-50,0,0,[{axis:self.Y_AXIS,rad:ROTATE_270},{axis:self.Z_AXIS,rad:ROTATE_90}]),bottomFace=self.makeFace(self.FACES.BOTTOM,70,0,0,-50,[{axis:self.Y_AXIS,rad:ROTATE_180},{axis:self.Z_AXIS,rad:ROTATE_90}]);self.frontFace=frontFace;var topFrontEdge=self.makeEdge(self.FACES.TOP_FRONT_EDGE,70,15,0,-50,50,[{axis:self.Z_AXIS,rad:ROTATE_0}]),topRightEdge=self.makeEdge(self.FACES.TOP_RIGHT_EDGE,70,15,50,0,50,[{axis:self.Z_AXIS,rad:ROTATE_90}]),topBackEdge=self.makeEdge(self.FACES.TOP_BACK_EDGE,70,15,0,50,50,[{axis:self.Z_AXIS,rad:ROTATE_180}]),topLeftEdge=self.makeEdge(self.FACES.TOP_LEFT_EDGE,70,15,-50,0,50,[{axis:self.Z_AXIS,rad:ROTATE_270}]),bottomFrontEdge=self.makeEdge(self.FACES.BOTTOM_FRONT_EDGE,70,15,0,-50,-50,[{axis:self.Z_AXIS,rad:ROTATE_0},{axis:self.Y_AXIS,rad:ROTATE_180}]),bottomRightEdge=self.makeEdge(self.FACES.BOTTOM_RIGHT_EDGE,70,15,50,0,-50,[{axis:self.Z_AXIS,rad:ROTATE_90},{axis:self.Y_AXIS,rad:ROTATE_180}]),bottomBackEdge=self.makeEdge(self.FACES.BOTTOM_BACK_EDGE,70,15,0,50,-50,[{axis:self.Z_AXIS,rad:ROTATE_180},{axis:self.Y_AXIS,rad:ROTATE_180}]),bottomLeftEdge=self.makeEdge(self.FACES.BOTTOM_LEFT_EDGE,70,15,-50,0,-50,[{axis:self.Z_AXIS,rad:ROTATE_270},{axis:self.Y_AXIS,rad:ROTATE_180}]),frontRightEdge=self.makeEdge(self.FACES.FRONT_RIGHT_EDGE,70,15,50,-50,0,[{
axis:self.X_AXIS,rad:ROTATE_0},{axis:self.Y_AXIS,rad:ROTATE_90}]),backRightEdge=self.makeEdge(self.FACES.BACK_RIGHT_EDGE,70,15,50,50,0,[{axis:self.X_AXIS,rad:ROTATE_180},{axis:self.Y_AXIS,rad:ROTATE_90}]),backLeftEdge=self.makeEdge(self.FACES.BACK_LEFT_EDGE,70,15,-50,50,0,[{axis:self.X_AXIS,rad:ROTATE_180},{axis:self.Y_AXIS,rad:ROTATE_270}]),frontLeftEdge=self.makeEdge(self.FACES.FRONT_LEFT_EDGE,70,15,-50,-50,0,[{axis:self.X_AXIS,rad:ROTATE_0},{axis:self.Y_AXIS,rad:ROTATE_270}]),topFrontLeftCorner=self.makeCorner(self.FACES.TOP_FRONT_LEFT_CORNER,15,-50,-50,50,[{axis:self.Z_AXIS,rad:ROTATE_0}]),topFrontRightCorner=self.makeCorner(self.FACES.TOP_FRONT_RIGHT_CORNER,15,50,-50,50,[{axis:self.Z_AXIS,rad:ROTATE_90}]),topBackRightCorner=self.makeCorner(self.FACES.TOP_BACK_RIGHT_CORNER,15,50,50,50,[{axis:self.Z_AXIS,rad:ROTATE_180}]),topBackLeftCorner=self.makeCorner(self.FACES.TOP_BACK_LEFT_CORNER,15,-50,50,50,[{axis:self.Z_AXIS,rad:ROTATE_270}]),bottomFrontLeftCorner=self.makeCorner(self.FACES.BOTTOM_FRONT_LEFT_CORNER,15,-50,-50,-50,[{axis:self.Y_AXIS,rad:ROTATE_180},{axis:self.Z_AXIS,rad:ROTATE_90}]),bottomFrontRightCorner=self.makeCorner(self.FACES.BOTTOM_FRONT_RIGHT_CORNER,15,50,-50,-50,[{axis:self.Y_AXIS,rad:ROTATE_180},{axis:self.Z_AXIS,rad:ROTATE_0}]),bottomBackRightCorner=self.makeCorner(self.FACES.BOTTOM_BACK_RIGHT_CORNER,15,50,50,-50,[{axis:self.Y_AXIS,rad:ROTATE_180},{axis:self.Z_AXIS,rad:ROTATE_270}]),bottomBackLeftCorner=self.makeCorner(self.FACES.BOTTOM_BACK_LEFT_CORNER,15,-50,50,-50,[{axis:self.Y_AXIS,rad:ROTATE_180},{axis:self.Z_AXIS,rad:ROTATE_180}]);self.cube.add(topFace),self.cube.add(frontFace),self.cube.add(rightFace),self.cube.add(backFace),self.cube.add(leftFace),self.cube.add(bottomFace),self.cube.add(topFrontEdge),self.cube.add(topRightEdge),self.cube.add(topBackEdge),self.cube.add(topLeftEdge),self.cube.add(bottomFrontEdge),self.cube.add(bottomRightEdge),self.cube.add(bottomBackEdge),self.cube.add(bottomLeftEdge),self.cube.add(frontRightEdge),self.cube.add(backRightEdge),self.cube.add(backLeftEdge),self.cube.add(frontLeftEdge),self.cube.add(topFrontLeftCorner),self.cube.add(topFrontRightCorner),self.cube.add(topBackRightCorner),self.cube.add(topBackLeftCorner),self.cube.add(bottomFrontLeftCorner),self.cube.add(bottomFrontRightCorner),self.cube.add(bottomBackRightCorner),self.cube.add(bottomBackLeftCorner),self.control.add(self.cube)}if(self.display.compass){var compass=self.makeCompass("compass",0,0,-55,90,64,self.COMPASS_COLOR,self.COMPASS_OPACITY);self.control.add(compass)}if(self.display.controlAxis){var controlAxis=new THREE.AxisHelper(100);self.cube.add(controlAxis)}if(self.display.sceneAxis){var sceneAxis=new THREE.AxisHelper(150);self.scene.add(sceneAxis)}if(self.display.cameraAxis){var cameraAxis=new THREE.AxisHelper(100);self.view.add(cameraAxis)}self.scene.add(self.control)},Viewcube.prototype.setupLights=function(){var self=this,ambientLight=new THREE.AmbientLight(5526612);self.view.add(ambientLight);var topLeftSpot=new THREE.SpotLight(16777215);topLeftSpot.lookAt(0,0,0),topLeftSpot.position.set(250,-250,250),topLeftSpot.intensity=2;var topRightSpot=new THREE.SpotLight(16777215);topRightSpot.lookAt(0,0,0),topRightSpot.position.set(250,250,250),topRightSpot.intensity=.75,self.view.add(topLeftSpot),self.view.add(topRightSpot)},Viewcube.prototype.setupMaterials=function(){var self=this;self.materials.face=new THREE.MeshBasicMaterial({alphaTest:.5,color:self.FACE_COLOUR,opacity:self.FACE_OPACITY_MOUSE_OFF,transparent:!0}),self.materials.face.side=THREE.DoubleSide;var label1=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/"+self.labelSize+"/top.png"),opacity:self.LABELS_HOVER_OFF,transparent:!0}),label2=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/"+self.labelSize+"/front.png"),opacity:self.LABELS_HOVER_OFF,transparent:!0}),label3=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/"+self.labelSize+"/right.png"),opacity:self.LABELS_HOVER_OFF,transparent:!0}),label4=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/"+self.labelSize+"/left.png"),opacity:self.LABELS_HOVER_OFF,transparent:!0}),label5=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/"+self.labelSize+"/back.png"),opacity:self.LABELS_HOVER_OFF,transparent:!0}),label6=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("/lib/img/"+self.labelSize+"/bottom.png"),opacity:self.LABELS_HOVER_OFF,transparent:!0}),labels=[label3,label4,label5,label2,label1,label6];self.materials.labels=new THREE.MeshFaceMaterial(labels)},Viewcube.prototype.setView=function(view){var euler,self=this;switch(view){case self.FACES.BACK:self.tweenViewRotation(Math.PI/2,Math.PI,0),self.dispatchEvent({type:"update",view:view,direction:new THREE.Euler(Math.PI/2,Math.PI,0)});break;case self.FACES.BACK_LEFT_EDGE:self.tweenViewRotation(Math.PI/2,1.25*Math.PI,0);break;case self.FACES.BACK_RIGHT_EDGE:self.tweenViewRotation(Math.PI/2,.75*Math.PI,0);break;case self.FACES.BOTTOM:self.tweenViewRotation(Math.PI,0,0);break;case self.FACES.BOTTOM_BACK_EDGE:self.tweenViewRotation(1.25*Math.PI,0,Math.PI);break;case self.FACES.BOTTOM_BACK_LEFT_CORNER:self.tweenViewRotation(.75*-Math.PI,-Math.PI/4,.75*Math.PI);break;case self.FACES.BOTTOM_BACK_RIGHT_CORNER:self.tweenViewRotation(.75*Math.PI,.25*Math.PI,1.25*Math.PI);break;case self.FACES.BOTTOM_FRONT_EDGE:self.tweenViewRotation(.75*Math.PI,0,0);break;case self.FACES.BOTTOM_FRONT_LEFT_CORNER:self.tweenViewRotation(0,-Math.PI/4,.25*Math.PI);break;case self.FACES.BOTTOM_FRONT_RIGHT_CORNER:self.tweenViewRotation(Math.PI,Math.PI,1.75*Math.PI);break;case self.FACES.BOTTOM_LEFT_EDGE:self.tweenViewRotation(0,1.25*Math.PI,1.5*Math.PI);break;case self.FACES.BOTTOM_RIGHT_EDGE:self.tweenViewRotation(0,.75*Math.PI,Math.PI/2);break;case self.FACES.FRONT:self.tweenViewRotation(Math.PI/2,0,0);break;case self.FACES.FRONT_LEFT_EDGE:self.tweenViewRotation(Math.PI/2,1.75*Math.PI,0);break;case self.FACES.FRONT_RIGHT_EDGE:self.tweenViewRotation(Math.PI/2,Math.PI/4,0);break;case self.FACES.LEFT:self.tweenViewRotation(Math.PI/2,1.5*Math.PI,0);break;case self.FACES.RIGHT:self.tweenViewRotation(Math.PI/2,Math.PI/2,0);break;case self.FACES.TOP:self.tweenViewRotation(0,0,0);break;case self.FACES.TOP_BACK_EDGE:self.tweenViewRotation(1.75*Math.PI,0,Math.PI);break;case self.FACES.TOP_BACK_LEFT_CORNER:euler=new THREE.Euler(0,0,0).setFromVector3(new THREE.Vector3(-1.5,-1.5,2.75).normalize()),self.tweenViewRotation(euler.x,euler.y,euler.z*Math.PI*1.5);break;case self.FACES.TOP_BACK_RIGHT_CORNER:euler=new THREE.Euler(0,0,0).setFromVector3(new THREE.Vector3(-1.5,1.5,2.5).normalize()),self.tweenViewRotation(euler.x,euler.y,euler.z*Math.PI);break;case self.FACES.TOP_FRONT_EDGE:self.tweenViewRotation(Math.PI/4,0,0);break;case self.FACES.TOP_FRONT_LEFT_CORNER:euler=new THREE.Euler(0,0,0).setFromVector3(new THREE.Vector3(1.5,-1.5,-2).normalize()),self.tweenViewRotation(euler.x,euler.y,euler.z);break;case self.FACES.TOP_FRONT_RIGHT_CORNER:euler=new THREE.Euler(0,0,0).setFromVector3(new THREE.Vector3(1.5,1.5,2).normalize()),self.tweenViewRotation(euler.x,euler.y,euler.z);break;case self.FACES.TOP_LEFT_EDGE:self.tweenViewRotation(0,1.75*Math.PI,1.5*Math.PI);break;case self.FACES.TOP_RIGHT_EDGE:self.tweenViewRotation(0,Math.PI/4,Math.PI/2);break;default:console.warn("view not found",view)}},Viewcube.prototype.tweenControlOpacity=function(material,start,finish){var self=this;return new Promise(function(resolve){function setOpacity(material,opacity){Array.isArray(material)&&material.forEach(function(m){setOpacity(m,opacity)}),material instanceof THREE.MultiMaterial?material.materials.forEach(function(m){m.opacity=opacity}):material.opacity=opacity}var o1={opacity:start},o2={opacity:finish},tween=new TWEEN.Tween(o1).to(o2,1e3);tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(function(){setOpacity(material,this.opacity),self.render(),self.renderContinuous=!1,resolve()}),tween.onUpdate(function(){setOpacity(material,this.opacity),self.render()}),self.renderContinuous=!0,tween.start(),self.render()})},Viewcube.prototype.tweenViewRotation=function(rx,ry,rz,duration){var self=this;return new Promise(function(resolve){var targetEuler=new THREE.Euler(rx,ry,rz,"XYZ"),startQuaternion=self.view.quaternion.clone(),endQuaternion=(new THREE.Quaternion).setFromEuler(targetEuler),start={t:0},finish={t:1},tween=new TWEEN.Tween(start).to(finish,duration||1e3);tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(function(){THREE.Quaternion.slerp(startQuaternion,endQuaternion,self.view.quaternion,this.t),self.render(),self.renderContinuous=!1,resolve()}),tween.onUpdate(function(){THREE.Quaternion.slerp(startQuaternion,endQuaternion,self.view.quaternion,this.t),self.render()}),self.renderContinuous=!0,tween.start(),self.render()})},Viewcube.prototype.update=function(){var self=this;TWEEN.update(),self.renderContinuous&&requestAnimationFrame(self.update.bind(self))},Viewcube.prototype.updateOrientation=function(){var self=this,euler=new THREE.Euler(self.viewport.camera.rotation.x,self.viewport.camera.rotation.y,self.viewport.camera.rotation.z,"XZY");self.view.quaternion.setFromEuler(euler),self.render()},Viewcube}(),FOUR.LookController=function(){function LookController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.CURSOR={DEFAULT:"default",LOOK:"crosshair"},self.EPS=1e-6,self.EVENT={UPDATE:{type:"update"}},self.KEY={TILDE:192},self.MOUSE_STATE={UP:0,DOWN:1},self.camera=config.camera||config.viewport.camera,self.domElement=config.domElement||config.viewport.domElement,self.enabled=!1,self.listeners={},self.look={delta:new THREE.Vector2,dir:new THREE.Vector3,end:new THREE.Vector2,offset:new THREE.Vector3,screen:new THREE.Vector3,start:new THREE.Vector2,target:new THREE.Vector3,world:new THREE.Vector3},self.lookSpeed=.75,self.mouse=self.MOUSE_STATE.UP,self.viewport=config.viewport,Object.keys(config).forEach(function(key){self[key]=config[key]})}return LookController.prototype=Object.create(THREE.EventDispatcher.prototype),LookController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},LookController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.domElement,"mousedown",self.onMouseDown),addListener(self.domElement,"mousemove",self.onMouseMove),addListener(self.domElement,"mouseup",self.onMouseUp),addListener(self.domElement,"keyup",self.onKeyUp),self.enabled=!0},LookController.prototype.onKeyUp=function(event){event.keyCode===this.KEY.TILDE&&(this.camera.lookAt(this.camera.target),this.dispatchEvent(this.EVENT.UPDATE))},LookController.prototype.onMouseDown=function(event){event.button===THREE.MOUSE.LEFT&&(this.domElement.style.cursor=this.CURSOR.LOOK,this.mouse=this.MOUSE_STATE.DOWN,this.look.start.set(event.offsetX-this.domElement.clientLeft,event.offsetY-this.domElement.clientTop),this.look.end.copy(this.look.start))},LookController.prototype.onMouseMove=function(event){this.mouse===this.MOUSE_STATE.DOWN&&this.look.end.set(event.offsetX-this.domElement.clientLeft,event.offsetY-this.domElement.clientTop)},LookController.prototype.onMouseUp=function(){this.domElement.style.cursor=this.CURSOR.DEFAULT,this.mouse=this.MOUSE_STATE.UP,this.look.start.copy(this.look.end)},LookController.prototype.update=function(){this.enabled!==!1&&this.mouse===this.MOUSE_STATE.DOWN&&(this.look.delta.set(this.look.end.x-this.look.start.x,this.look.end.y-this.look.start.y),this.look.delta.length()>0&&(this.look.screen.set(this.look.end.x/this.domElement.clientWidth*2-1,2*-(this.look.end.y/this.domElement.clientHeight)+1,1),this.look.screen.unproject(this.camera),this.look.world.copy(this.look.screen).add(this.camera.position),this.look.dir.subVectors(this.look.world,this.camera.position).normalize(),this.look.target.copy(this.look.dir).multiplyScalar(this.camera.getDistance()*this.lookSpeed),this.camera instanceof FOUR.TargetCamera?this.camera.lookAt(this.look.target):this.camera instanceof THREE.PerspectiveCamera,this.dispatchEvent(this.EVENT.UPDATE)))},LookController}(),FOUR.MultiController=function(){function MultiController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.controllers={},self.domElement=config.domElement,self.listeners={},self.viewport=config.viewport}return MultiController.prototype=Object.create(THREE.EventDispatcher.prototype),MultiController.prototype.constructor=MultiController,MultiController.prototype.addController=function(controller,name){function addListener(name,ctrl,event,fn){self.listeners[name]={ctrl:ctrl,event:event,fn:fn.bind(self)},ctrl.addEventListener(event,self.listeners[name].fn,!1)}var self=this;this.controllers[name]=controller;var events=["continuous-update-end","continuous-update-start","update"];events.forEach(function(event){addListener(name+"-"+event,controller,event,function(){self.dispatchEvent({type:event})})})},MultiController.prototype.disable=function(){var self=this;Object.keys(self.controllers).forEach(function(key){self.controllers[key].disable()})},MultiController.prototype.enable=function(){var self=this;Object.keys(self.controllers).forEach(function(key){self.controllers[key].enable()})},MultiController.prototype.removeController=function(name){delete this.controllers[name]},MultiController.prototype.update=function(delta){var self=this;Object.keys(self.controllers).forEach(function(key){self.controllers[key].update(delta)})},MultiController}(),FOUR.OrbitController=function(){function OrbitConstraint(camera){this.camera=camera,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-(1/0),this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25;var theta,phi,scope=this,EPS=1e-6,phiDelta=0,thetaDelta=0,scale=1,panOffset=new THREE.Vector3,zoomChanged=!1,offset=new THREE.Vector3,quat=(new THREE.Quaternion).setFromUnitVectors(camera.up,new THREE.Vector3(0,1,0)),quatInverse=quat.clone().inverse(),lastPosition=new THREE.Vector3,lastQuaternion=new THREE.Quaternion;this.dollyIn=function(dollyScale){scope.camera instanceof THREE.PerspectiveCamera?scale/=dollyScale:scope.camera instanceof THREE.OrthographicCamera?(scope.camera.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.camera.zoom*dollyScale)),scope.camera.updateProjectionMatrix(),zoomChanged=!0):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.dollyOut=function(dollyScale){scope.camera instanceof THREE.PerspectiveCamera?scale*=dollyScale:scope.camera instanceof THREE.OrthographicCamera?(scope.camera.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.camera.zoom/dollyScale)),scope.camera.updateProjectionMatrix(),zoomChanged=!0):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.getPolarAngle=function(){return phi},this.getAzimuthalAngle=function(){return theta},this.rotateLeft=function(angle){thetaDelta-=angle},this.rotateUp=function(angle){phiDelta-=angle},this.panLeft=function(){var v=new THREE.Vector3;return function(distance){var te=this.camera.matrix.elements;v.set(te[0],te[1],te[2]),v.multiplyScalar(-distance),panOffset.add(v)}}(),this.panUp=function(){var v=new THREE.Vector3;return function(distance){var te=this.camera.matrix.elements;v.set(te[4],te[5],te[6]),v.multiplyScalar(distance),panOffset.add(v)}}(),this.pan=function(deltaX,deltaY,screenWidth,screenHeight){if(scope.camera instanceof THREE.PerspectiveCamera){var position=scope.camera.position,offset=position.clone().sub(scope.target),targetDistance=offset.length();targetDistance*=Math.tan(scope.camera.fov/2*Math.PI/180),scope.panLeft(2*deltaX*targetDistance/screenHeight),scope.panUp(2*deltaY*targetDistance/screenHeight)}else scope.camera instanceof THREE.OrthographicCamera?(scope.panLeft(deltaX*(scope.camera.right-scope.camera.left)/screenWidth),scope.panUp(deltaY*(scope.camera.top-scope.camera.bottom)/screenHeight)):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")},this.sync=function(){this.target=new THREE.Vector3(0,0,-1),this.target.applyMatrix4(camera.matrixWorld)},this.update=function(){var position=this.camera.position;offset.copy(position).sub(this.target),offset.applyQuaternion(quat),theta=Math.atan2(offset.x,offset.z),phi=Math.atan2(Math.sqrt(offset.x*offset.x+offset.z*offset.z),offset.y),theta+=thetaDelta,phi+=phiDelta,theta=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,theta)),phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,phi)),phi=Math.max(EPS,Math.min(Math.PI-EPS,phi));var radius=offset.length()*scale;return radius=Math.max(this.minDistance,Math.min(this.maxDistance,radius)),this.target.add(panOffset),offset.x=radius*Math.sin(phi)*Math.sin(theta),offset.y=radius*Math.cos(phi),offset.z=radius*Math.sin(phi)*Math.cos(theta),offset.applyQuaternion(quatInverse),position.copy(this.target).add(offset),this.camera.lookAt(this.target),this.enableDamping===!0?(thetaDelta*=1-this.dampingFactor,phiDelta*=1-this.dampingFactor):(thetaDelta=0,phiDelta=0),scale=1,panOffset.set(0,0,0),zoomChanged||lastPosition.distanceToSquared(this.camera.position)>EPS||8*(1-lastQuaternion.dot(this.camera.quaternion))>EPS?(lastPosition.copy(this.camera.position),lastQuaternion.copy(this.camera.quaternion),zoomChanged=!1,!0):!1}}function OrbitController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.EVENT={UPDATE:{type:"update"},END:{type:"end"},START:{type:"start"}},self.KEYS={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},self.STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},self.autoRotate=!1,self.autoRotateSpeed=2,self.camera=config.camera||config.viewport.camera,self.constraint=new OrbitConstraint(self.camera),self.dollyDelta=new THREE.Vector2,self.dollyEnd=new THREE.Vector2,self.dollyStart=new THREE.Vector2,self.domElement=config.domElement||config.viewport.domElement,self.enabled=!1,self.enableKeys=!0,self.enablePan=!0,self.enableRotate=!0,self.enableZoom=!0,self.keyPanSpeed=7,self.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},self.listeners={},self.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT},self.panStart=new THREE.Vector2,self.panEnd=new THREE.Vector2,self.panDelta=new THREE.Vector2,self.rotateDelta=new THREE.Vector2,self.rotateEnd=new THREE.Vector2,self.rotateSpeed=1,self.rotateStart=new THREE.Vector2,self.state=self.STATE.NONE,self.viewport=config.viewport,self.zoomSpeed=1}return OrbitController.prototype=Object.create(THREE.EventDispatcher.prototype),OrbitController.prototype.constructor=OrbitController,OrbitController.prototype.contextmenu=function(event){event.preventDefault()},OrbitController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},OrbitController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.domElement,"contextmenu",self.contextmenu),addListener(self.domElement,"mousedown",self.onMouseDown),addListener(self.domElement,"mousemove",self.onMouseMove),addListener(self.domElement,"mouseup",self.onMouseUp),addListener(self.domElement,"mousewheel",self.onMouseWheel),addListener(self.domElement,"DOMMouseScroll",self.onMouseWheel),addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),self.constraint.sync(),self.enabled=!0},OrbitController.prototype.getAutoRotationAngle=function(){var self=this;return 2*Math.PI/60/60*self.autoRotateSpeed},OrbitController.prototype.getAzimuthalAngle=function(){return this.constraint.getAzimuthalAngle()},OrbitController.prototype.getPolarAngle=function(){return this.constraint.getPolarAngle()},OrbitController.prototype.getZoomScale=function(){var self=this;return Math.pow(.95,self.zoomSpeed)},OrbitController.prototype.onKeyDown=function(event){},OrbitController.prototype.onKeyUp=function(event){},OrbitController.prototype.onMouseDown=function(event){var self=this;if(self.enabled!==!1){if(event.preventDefault(),event.button===self.mouseButtons.ORBIT){if(self.enableRotate===!1)return;self.state=self.STATE.ROTATE,self.rotateStart.set(event.clientX,event.clientY)}else if(event.button===self.mouseButtons.ZOOM){if(self.enableZoom===!1)return;self.state=self.STATE.DOLLY,self.dollyStart.set(event.clientX,event.clientY)}else if(event.button===self.mouseButtons.PAN){if(self.enablePan===!1)return;self.state=self.STATE.PAN,self.panStart.set(event.clientX,event.clientY)}self.state!==self.STATE.NONE&&self.dispatchEvent(self.EVENT.START)}},OrbitController.prototype.onMouseMove=function(event){var self=this;if(self.enabled!==!1){event.preventDefault();var element=self.domElement;if(self.state===self.STATE.ROTATE){if(self.enableRotate===!1)return;self.rotateEnd.set(event.clientX,event.clientY),self.rotateDelta.subVectors(self.rotateEnd,self.rotateStart),self.constraint.rotateLeft(2*Math.PI*self.rotateDelta.x/element.clientWidth*self.rotateSpeed),self.constraint.rotateUp(2*Math.PI*self.rotateDelta.y/element.clientHeight*self.rotateSpeed),self.rotateStart.copy(self.rotateEnd)}else if(self.state===self.STATE.DOLLY){if(self.enableZoom===!1)return;self.dollyEnd.set(event.clientX,event.clientY),self.dollyDelta.subVectors(self.dollyEnd,self.dollyStart),self.dollyDelta.y>0?self.constraint.dollyIn(self.getZoomScale()):self.dollyDelta.y<0&&self.constraint.dollyOut(self.getZoomScale()),self.dollyStart.copy(self.dollyEnd)}else if(self.state===self.STATE.PAN){if(self.enablePan===!1)return;self.panEnd.set(event.clientX,event.clientY),self.panDelta.subVectors(self.panEnd,self.panStart),self.pan(self.panDelta.x,self.panDelta.y),self.panStart.copy(self.panEnd)}self.state!==self.STATE.NONE&&self.update()}},OrbitController.prototype.onMouseUp=function(event){var self=this;self.enabled!==!1&&(self.dispatchEvent(self.EVENT.END),self.state=self.STATE.NONE)},OrbitController.prototype.onMouseWheel=function(event){var self=this;if(self.enabled!==!1&&self.enableZoom!==!1&&self.state===self.STATE.NONE){event.preventDefault(),event.stopPropagation();var delta=0;void 0!==event.wheelDelta?delta=event.wheelDelta:void 0!==event.detail&&(delta=-event.detail),delta>0?self.constraint.dollyOut(self.getZoomScale()):0>delta&&self.constraint.dollyIn(self.getZoomScale()),self.update(),self.dispatchEvent(self.EVENT.START),self.dispatchEvent(self.EVENT.END)}},OrbitController.prototype.onWindowResize=function(){console.warn("Not implemented")},OrbitController.prototype.pan=function(deltaX,deltaY){var self=this,element=self.domElement===document?self.domElement.body:self.domElement;self.constraint.pan(deltaX,deltaY,element.clientWidth,element.clientHeight)},OrbitController.prototype.update=function(){var self=this;self.autoRotate&&self.state===self.STATE.NONE&&self.constraint.rotateLeft(self.getAutoRotationAngle()),self.constraint.update()===!0&&self.dispatchEvent(self.EVENT.UPDATE)},Object.defineProperties(OrbitController.prototype,{target:{get:function(){return this.constraint.target},set:function(value){console.warn("THREE.OrbitControls: target is now immutable. Use target.set() instead."),this.constraint.target.copy(value)}},minDistance:{get:function(){return this.constraint.minDistance},set:function(value){this.constraint.minDistance=value}},maxDistance:{get:function(){return this.constraint.maxDistance},set:function(value){this.constraint.maxDistance=value}},minZoom:{get:function(){return this.constraint.minZoom},set:function(value){this.constraint.minZoom=value}},maxZoom:{get:function(){return this.constraint.maxZoom},set:function(value){this.constraint.maxZoom=value}},minPolarAngle:{get:function(){return this.constraint.minPolarAngle},set:function(value){this.constraint.minPolarAngle=value}},maxPolarAngle:{get:function(){return this.constraint.maxPolarAngle},set:function(value){this.constraint.maxPolarAngle=value}},minAzimuthAngle:{get:function(){return this.constraint.minAzimuthAngle},set:function(value){this.constraint.minAzimuthAngle=value}},maxAzimuthAngle:{get:function(){return this.constraint.maxAzimuthAngle},set:function(value){this.constraint.maxAzimuthAngle=value}},enableDamping:{get:function(){return this.constraint.enableDamping},set:function(value){this.constraint.enableDamping=value}},dampingFactor:{get:function(){return this.constraint.dampingFactor},set:function(value){this.constraint.dampingFactor=value}}}),OrbitController}(),FOUR.PanController=function(){function PanController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.CURSOR={DEFAULT:"default",PAN:"all-scroll"},self.EPS=1e-6,self.EVENT={END:{type:"end"},START:{type:"start"},UPDATE:{type:"update"}},self.KEY={CTRL:17},self.MODES={NONE:0,PAN:1,ROTATE:2,ZOOM:3},self.domElement=config.domElement||config.viewport.domElement,self.dynamicDampingFactor=.2,self.enabled=!1,self.keydown=!1,self.listeners={},self.maxDistance=1/0,self.minDistance=1,self.mode=self.MODES.NONE,self.offset=new THREE.Vector3,self.pan={delta:new THREE.Vector2,end:new THREE.Vector2,start:new THREE.Vector2},self.panSpeed=.8,self.viewport=config.viewport,Object.keys(config).forEach(function(key){self[key]=config[key]})}return PanController.prototype=Object.create(THREE.EventDispatcher.prototype),PanController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},PanController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.domElement,"mousedown",self.onMouseDown),addListener(self.domElement,"mousemove",self.onMouseMove),addListener(self.domElement,"mouseup",self.onMouseUp),self.enabled=!0},PanController.prototype.getNormalizedDeviceCoordinates=function(x,y,element){var nx=(x-element.clientLeft)/element.clientWidth,ny=(y-element.clientTop)/element.clientHeight;return new THREE.Vector2(nx,ny)},PanController.prototype.getWorldSpaceCoordinates=function(ndc,camera){var mouse=(new THREE.Vector3).set(2*-ndc.x-1,2*ndc.y+1,.5);return mouse.unproject(camera)},PanController.prototype.onMouseDown=function(event){if(event.button===THREE.MOUSE.RIGHT){this.domElement.style.cursor=this.CURSOR.PAN,this.mode=this.MODES.PAN;var ndc=this.getNormalizedDeviceCoordinates(event.offsetX,event.offsetY,this.domElement);this.pan.start.copy(ndc),this.pan.end.copy(ndc),this.dispatchEvent(this.EVENT.START),event.preventDefault()}},PanController.prototype.onMouseMove=function(event){if(event.button===THREE.MOUSE.RIGHT){var ndc=this.getNormalizedDeviceCoordinates(event.offsetX,event.offsetY,this.domElement);this.pan.end.copy(ndc),event.preventDefault()}},PanController.prototype.onMouseUp=function(event){this.mode===this.MODES.PAN&&(this.domElement.style.cursor=this.CURSOR.DEFAULT,this.mode=this.MODES.NONE,this.pan.delta.set(0,0),this.dispatchEvent(this.EVENT.END),event.preventDefault())},PanController.prototype.update=function(){if(this.enabled!==!1&&this.mode===this.MODES.PAN&&(this.pan.delta.subVectors(this.pan.end,this.pan.start),this.pan.delta.lengthSq()>this.EPS)){var camera=this.viewport.getCamera(),start=this.getWorldSpaceCoordinates(this.pan.start,camera),end=this.getWorldSpaceCoordinates(this.pan.end,camera),delta=end.sub(start).multiplyScalar(camera.getDistance()*this.panSpeed),position=(new THREE.Vector3).addVectors(delta,camera.position);camera.setPosition(position,!1),this.pan.start.copy(this.pan.end),this.dispatchEvent(this.EVENT.UPDATE)}},PanController}(),FOUR.RotateController=function(){function OrbitConstraint(camera){this.camera=camera,this.maxDistance=1/0,this.minDistance=1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-(1/0),this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25;var theta,phi,EPS=1e-6,phiDelta=0,thetaDelta=0,scale=1,offset=new THREE.Vector3,quat=(new THREE.Quaternion).setFromUnitVectors(camera.up,new THREE.Vector3(0,1,0)),quatInverse=quat.clone().inverse(),lastPosition=new THREE.Vector3,lastQuaternion=new THREE.Quaternion;this.getPolarAngle=function(){return phi},this.getAzimuthalAngle=function(){return theta},this.rotateLeft=function(angle){thetaDelta-=angle},this.rotateUp=function(angle){phiDelta-=angle},this.update=function(){var position=this.camera.position;offset.copy(position).sub(this.camera.target),offset.applyQuaternion(quat),theta=Math.atan2(offset.x,offset.z),phi=Math.atan2(Math.sqrt(offset.x*offset.x+offset.z*offset.z),offset.y),theta+=thetaDelta,phi+=phiDelta,theta=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,theta)),phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,phi)),phi=Math.max(EPS,Math.min(Math.PI-EPS,phi));var radius=offset.length()*scale;return radius=Math.max(this.minDistance,Math.min(this.maxDistance,radius)),offset.x=radius*Math.sin(phi)*Math.sin(theta),offset.y=radius*Math.cos(phi),offset.z=radius*Math.sin(phi)*Math.cos(theta),offset.applyQuaternion(quatInverse),position.copy(this.camera.target).add(offset),this.camera.lookAt(this.camera.target),this.enableDamping===!0?(thetaDelta*=1-this.dampingFactor,phiDelta*=1-this.dampingFactor):(thetaDelta=0,phiDelta=0),scale=1,lastPosition.distanceToSquared(this.camera.position)>EPS||8*(1-lastQuaternion.dot(this.camera.quaternion))>EPS?(lastPosition.copy(this.camera.position),lastQuaternion.copy(this.camera.quaternion),!0):!1}}function RotateController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.CURSOR={DEFAULT:"default",ROTATE:"crosshair"},self.EVENT={UPDATE:{type:"update"},END:{type:"end"},START:{type:"start"}},self.KEY={ALT:18,CTRL:17,SHIFT:16},self.STATE={NONE:-1,ROTATE:0},self.camera=config.camera||config.viewport.camera,self.constraint=new OrbitConstraint(self.camera),self.domElement=config.domElement||config.viewport.domElement,self.enabled=!1,self.enableKeys=!0,self.enableRotate=!0,self.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},self.modifiers={},self.listeners={},self.rotateDelta=new THREE.Vector2,self.rotateEnd=new THREE.Vector2,self.rotateSpeed=1,self.rotateStart=new THREE.Vector2,self.state=self.STATE.NONE,self.viewport=config.viewport}return RotateController.prototype=Object.create(THREE.EventDispatcher.prototype),RotateController.prototype.constructor=RotateController,RotateController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},RotateController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.domElement,"mousedown",self.onMouseDown),addListener(self.domElement,"mousemove",self.onMouseMove),addListener(self.domElement,"mouseup",self.onMouseUp),addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),self.enabled=!0},RotateController.prototype.isActivated=function(event){return event.button===THREE.MOUSE.MIDDLE?!0:this.modifiers[this.KEY.ALT]&&this.modifiers[this.KEY.CTRL]?!0:!1;
},RotateController.prototype.onKeyDown=function(event){var self=this;Object.keys(self.KEY).forEach(function(key){event.keyCode===self.KEY[key]&&(self.modifiers[event.keyCode]=!0)})},RotateController.prototype.onKeyUp=function(event){var self=this;Object.keys(self.KEY).forEach(function(key){event.keyCode===self.KEY[key]&&(self.modifiers[event.keyCode]=!1)})},RotateController.prototype.onMouseDown=function(event){this.isActivated(event)&&(console.info("rotate control active"),this.state=this.STATE.ROTATE,this.domElement.style.cursor=this.CURSOR.ROTATE,this.rotateStart.set(event.clientX,event.clientY),this.dispatchEvent(this.EVENT.START),event.preventDefault())},RotateController.prototype.onMouseMove=function(event){this.isActivated(event)&&this.state===this.STATE.ROTATE&&(this.rotateEnd.set(event.clientX,event.clientY),this.rotateDelta.subVectors(this.rotateEnd,this.rotateStart),this.constraint.rotateLeft(2*Math.PI*this.rotateDelta.x/this.domElement.clientWidth*this.rotateSpeed),this.constraint.rotateUp(2*Math.PI*this.rotateDelta.y/this.domElement.clientHeight*this.rotateSpeed),this.rotateStart.copy(this.rotateEnd),this.update(),event.preventDefault())},RotateController.prototype.onMouseUp=function(event){this.state===this.STATE.ROTATE&&(this.domElement.style.cursor=this.CURSOR.DEFAULT,this.state=this.STATE.NONE,this.dispatchEvent(this.EVENT.END),event.preventDefault())},RotateController.prototype.setCamera=function(camera){this.constraint.camera=camera},RotateController.prototype.update=function(){this.state===this.STATE.ROTATE&&this.constraint.update()===!0&&(this.dispatchEvent(this.EVENT.UPDATE),this.viewport.getCamera().dispatchEvent({type:"update"}))},Object.defineProperties(RotateController.prototype,{minDistance:{get:function(){return this.constraint.minDistance},set:function(value){this.constraint.minDistance=value}},maxDistance:{get:function(){return this.constraint.maxDistance},set:function(value){this.constraint.maxDistance=value}},minPolarAngle:{get:function(){return this.constraint.minPolarAngle},set:function(value){this.constraint.minPolarAngle=value}},maxPolarAngle:{get:function(){return this.constraint.maxPolarAngle},set:function(value){this.constraint.maxPolarAngle=value}},minAzimuthAngle:{get:function(){return this.constraint.minAzimuthAngle},set:function(value){this.constraint.minAzimuthAngle=value}},maxAzimuthAngle:{get:function(){return this.constraint.maxAzimuthAngle},set:function(value){this.constraint.maxAzimuthAngle=value}},enableDamping:{get:function(){return this.constraint.enableDamping},set:function(value){this.constraint.enableDamping=value}},dampingFactor:{get:function(){return this.constraint.dampingFactor},set:function(value){this.constraint.dampingFactor=value}}}),RotateController}(),FOUR.TourController=function(){function TourController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.EVENTS={UPDATE:{type:"update"},END:{type:"end"},START:{type:"start"}},self.KEY={CANCEL:27,NEXT:190,PREVIOUS:188,NONE:-1,PLAN:-2,UPDATE:-3},self.PLANNING_STRATEGY={GENETIC_EVOLUTION:0,SIMULATED_ANNEALING:1},self.camera=config.viewport.camera,self.current=-1,self.domElement=config.viewport.domElement,self.enabled=!1,self.listeners={},self.offset=100,self.path=[],self.planner=new FOUR.PathPlanner,self.planningStrategy=self.PLANNING_STRATEGY.GENETIC_EVOLUTION,self.viewport=config.viewport}return TourController.prototype=Object.create(THREE.EventDispatcher.prototype),TourController.prototype.constructor=TourController,TourController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},TourController.prototype.distanceBetween=function(p1,p2){var dx=Math.abs(p2.x-p1.x),dy=Math.abs(p2.y-p1.y),dz=Math.abs(p2.z-p1.z);return Math.sqrt(dx*dx+dy*dy+dz*dz)},TourController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(window,"keyup",self.onKeyUp),this.enabled=!0},TourController.prototype.getPath=function(){return this.path},TourController.prototype.navigate=function(i){var self=this,feature=self.path[i];self.camera.setTarget(new THREE.Vector3(feature.x,feature.y,feature.z),!0)},TourController.prototype.nearest=function(p){var dist,nearest,self=this;return nearest=self.path.reduce(function(last,current,index){return dist=self.distanceBetween(p,current),dist<=last.dist&&(last={x:current.x,y:current.y,z:current.z,dist:dist,index:index}),last},{x:p.x,y:p.y,z:p.z,dist:1/0,index:-1})},TourController.prototype.next=function(){var self=this;if(-1===self.current){var nearest=self.nearest(self.camera.position);self.current=nearest.index}else self.current<self.path.length-1?self.current++:self.current=0;return self.navigate(self.current)},TourController.prototype.noop=function(){},TourController.prototype.onKeyDown=function(){},TourController.prototype.onKeyUp=function(){var self=this;if(self.enabled)switch(event.keyCode){case self.KEY.CANCEL:self.current=-1,self.path=[];break;case self.KEY.NEXT:self.next();break;case self.KEY.PREVIOUS:self.previous()}},TourController.prototype.plan=function(objs){var self=this;return self.current=-1,self.path=[],self.planner.generateTourSequence(objs).then(function(path){self.path=path},function(err){console.error(err)})},TourController.prototype.previous=function(){var self=this;if(-1===self.current){var nearest=self.nearest(self.camera.position);self.current=nearest.index}else 0===self.current?self.current=self.path.length-1:self.current--;return self.navigate(self.current)},TourController.prototype.setCamera=function(camera){this.camera=camera},TourController.prototype.update=function(){},TourController}(),FOUR.WalkController=function(){function WalkController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.EVENT={UPDATE:{type:"update"}},self.KEY={CANCEL:27,CTRL:17,MOVE_TO_EYE_HEIGHT:192,MOVE_FORWARD:38,MOVE_LEFT:37,MOVE_BACK:40,MOVE_RIGHT:39,MOVE_UP:221,MOVE_DOWN:219,ROTATE_LEFT:-1,ROTATE_RIGHT:-1},self.MOUSE_STATE={DOWN:0,UP:1},self.camera=config.camera||config.viewport.camera,self.domElement=config.domElement||config.viewport.domElement,self.enabled=!1,self.enforceWalkHeight=!0,self.listeners={},self.lookChange=!1,self.lookSpeed=.85,self.modifiers={ALT:!1,CTRL:!1,SHIFT:!1},self.mouse={direction:new THREE.Vector2,end:{x:0,y:0},start:{x:0,y:0},state:self.MOUSE_STATE.UP},self.move={forward:!1,backward:!1,left:!1,right:!1,up:!1,down:!1},self.movementSpeed=100,self.raycaster=new THREE.Raycaster,self.timeout=null,self.viewport=config.viewport,self.walkHeight=null,self.viewHalfX=self.domElement.offsetWidth/2,self.viewHalfY=self.domElement.offsetHeight/2,self.domElement.setAttribute("tabindex",-1),Object.keys(config).forEach(function(key){self[key]=config[key]})}return WalkController.prototype=Object.create(THREE.EventDispatcher.prototype),WalkController.prototype.constructor=WalkController,WalkController.prototype.WALK_HEIGHT=2,WalkController.prototype.contextMenu=function(event){event.preventDefault()},WalkController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},WalkController.prototype.emit=function(event){this.dispatchEvent({type:event||"update"})},WalkController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),self.enabled=!0,self.setWalkHeight()},WalkController.prototype.getWalkHeight=function(position){return 0+this.WALK_HEIGHT},WalkController.prototype.onKeyDown=function(event){var self=this;if(self.enabled)switch(event.keyCode){case self.KEY.CTRL:self.modifiers[self.KEY.CTRL]=!0;break;case self.KEY.MOVE_TO_EYE_HEIGHT:self.setWalkHeight(),self.emit({type:"continuous-update-start"});break;case self.KEY.MOVE_FORWARD:self.move.forward=!0,self.emit({type:"continuous-update-start"});break;case self.KEY.MOVE_BACK:self.move.backward=!0,self.emit({type:"continuous-update-start"});break;case self.KEY.MOVE_LEFT:self.move.left=!0,self.emit({type:"continuous-update-start"});break;case self.KEY.MOVE_RIGHT:self.move.right=!0,self.emit({type:"continuous-update-start"});break;case self.KEY.MOVE_UP:self.move.up=!0,self.emit({type:"continuous-update-start"});break;case self.KEY.MOVE_DOWN:self.move.down=!0,self.emit({type:"continuous-update-start"})}},WalkController.prototype.onKeyUp=function(event){var self=this;switch(event.keyCode){case self.KEY.CTRL:self.modifiers[self.KEY.CTRL]=!1;break;case self.KEY.MOVE_FORWARD:self.move.forward=!1,self.emit({type:"continuous-update-end"});break;case self.KEY.MOVE_BACK:self.move.backward=!1,self.emit({type:"continuous-update-end"});break;case self.KEY.MOVE_LEFT:self.move.left=!1,self.emit({type:"continuous-update-end"});break;case self.KEY.MOVE_RIGHT:self.move.right=!1,self.emit({type:"continuous-update-end"});break;case self.KEY.MOVE_UP:self.move.up=!1,self.emit({type:"continuous-update-end"});break;case self.KEY.MOVE_DOWN:self.move.down=!1,self.emit({type:"continuous-update-end"});break;case self.KEY.CANCEL:Object.keys(self.move).forEach(function(key){self.move[key]=!1}),self.lookChange=!1,self.emit({type:"continuous-update-end"})}},WalkController.prototype.setWalkHeight=function(){var self=this,pos=new THREE.Vector3(self.camera.position.x,self.camera.position.y,self.WALK_HEIGHT),target=new THREE.Vector3(self.camera.target.x,self.camera.target.y,self.WALK_HEIGHT);return self.camera.resetOrientation(self.emit.bind(self)).then(function(){self.camera.setPositionAndTarget(pos,target)})},WalkController.prototype.update=function(delta){var cross,distance,height,next,offset,change=!1,self=this;self.enabled&&(distance=delta*self.movementSpeed,offset=(new THREE.Vector3).subVectors(self.camera.position,self.camera.target),offset.setLength(distance),cross=(new THREE.Vector3).crossVectors(offset,self.camera.up),self.move.forward&&(offset.negate(),next=(new THREE.Vector3).addVectors(self.camera.position,offset),self.camera.position.copy(next),next=(new THREE.Vector3).addVectors(self.camera.target,offset),self.camera.target.copy(next),change=!0),self.move.backward&&(next=(new THREE.Vector3).addVectors(self.camera.position,offset),self.camera.position.copy(next),next=(new THREE.Vector3).addVectors(self.camera.target,offset),self.camera.target.copy(next),change=!0),self.move.right&&(cross.negate(),next=(new THREE.Vector3).addVectors(self.camera.position,cross),self.camera.position.copy(next),next=(new THREE.Vector3).addVectors(self.camera.target,cross),self.camera.target.copy(next),change=!0),self.move.left&&(next=(new THREE.Vector3).addVectors(self.camera.position,cross),self.camera.position.copy(next),next=(new THREE.Vector3).addVectors(self.camera.target,cross),self.camera.target.copy(next),change=!0),self.move.up&&(offset=(new THREE.Vector3).copy(self.camera.up),offset.setLength(distance),next=(new THREE.Vector3).addVectors(self.camera.position,offset),self.camera.position.copy(next),next=(new THREE.Vector3).addVectors(self.camera.target,offset),self.camera.target.copy(next),change=!0),self.move.down&&(height=self.getWalkHeight(self.camera.position),offset=(new THREE.Vector3).copy(self.camera.up).negate(),offset.setLength(distance),next=(new THREE.Vector3).addVectors(self.camera.position,offset),next.z=next.z<height?height:next.z,self.camera.position.copy(next),next=(new THREE.Vector3).addVectors(self.camera.target,offset),next.z=next.z<height?height:next.z,self.camera.target.copy(next),change=!0),change&&self.dispatchEvent(self.EVENT.UPDATE))},WalkController}(),FOUR.ZoomController=function(){function ZoomController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.CURSOR={DEFAULT:"default",ZOOM:"ns-resize"},self.EPS=1e-6,self.EVENT={UPDATE:{type:"update"}},self.KEY={ZOOM:16},self.MOUSE_STATE={UP:0,DOWN:1},self.camera=config.camera||config.viewport.camera,self.domElement=config.domElement||config.viewport.domElement,self.dragZoomSpeed=1.2,self.enabled=!1,self.keydown=!1,self.listeners={},self.maxDistance=1/0,self.minDistance=1,self.mouse=self.MOUSE_STATE.UP,self.timeout=null,self.viewport=config.viewport,self.wheelZoomSpeed=500,self.zoom={delta:0,end:new THREE.Vector2,start:new THREE.Vector2},Object.keys(config).forEach(function(key){self[key]=config[key]})}return ZoomController.prototype=Object.create(THREE.EventDispatcher.prototype),ZoomController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},ZoomController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.domElement,"contextmenu",self.onContextMenu),addListener(self.domElement,"mousedown",self.onMouseDown),addListener(self.domElement,"mousemove",self.onMouseMove),addListener(self.domElement,"mouseup",self.onMouseUp),addListener(self.domElement,"mousewheel",self.onMouseWheel),addListener(self.domElement,"DOMMouseScroll",self.onMouseWheel),addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),self.enabled=!0},ZoomController.prototype.onContextMenu=function(event){event.preventDefault()},ZoomController.prototype.onKeyDown=function(event){event.keyCode===this.KEY.ZOOM&&(this.keydown=!0)},ZoomController.prototype.onKeyUp=function(event){event.keyCode===this.KEY.ZOOM&&(this.keydown=!1)},ZoomController.prototype.onMouseDown=function(event){event.preventDefault(),this.keydown&&event.button===THREE.MOUSE.LEFT&&(this.domElement.style.cursor=this.CURSOR.ZOOM,this.mouse=this.MOUSE_STATE.DOWN,this.zoom.end.set(0,0),this.zoom.start.set(event.offsetX,event.offsetY))},ZoomController.prototype.onMouseMove=function(event){event.preventDefault(),this.keydown&&event.button===THREE.MOUSE.LEFT&&this.mouse===this.MOUSE_STATE.DOWN&&(this.zoom.end.copy(this.zoom.start),this.zoom.start.set(event.offsetX,event.offsetY),this.zoom.delta=-((this.zoom.end.y-this.zoom.start.y)/this.domElement.clientHeight)*this.wheelZoomSpeed)},ZoomController.prototype.onMouseUp=function(event){event.preventDefault(),event.button===THREE.MOUSE.LEFT&&(this.domElement.style.cursor=this.CURSOR.DEFAULT,this.mouse=this.MOUSE_STATE.UP,this.zoom.delta=0)},ZoomController.prototype.onMouseWheel=function(event){var self=this;self.enabled!==!1&&(event.preventDefault(),event.wheelDeltaY?self.zoom.delta=event.wheelDeltaY/40:event.detail?self.zoom.delta=-event.detail/3:self.zoom.delta=0,self.domElement.style.cursor=self.CURSOR.ZOOM,null!==self.timeout&&(clearTimeout(self.timeout),self.timeout=setTimeout(function(){self.domElement.style.cursor=self.CURSOR.DEFAULT,self.timeout=null},250)),self.dispatchEvent(self.EVENT.UPDATE))},ZoomController.prototype.update=function(){var distance,lookAt,self=this;self.enabled!==!1&&0!==self.zoom.delta&&(self.camera instanceof FOUR.TargetCamera?(distance=self.camera.getDistance()+-self.zoom.delta*self.dragZoomSpeed,distance=distance<self.minDistance?self.minDistance:distance,Math.abs(distance)>self.EPS&&(self.camera.setDistance(distance),self.dispatchEvent(self.EVENT.UPDATE))):self.camera instanceof THREE.PerspectiveCamera&&(lookAt=new THREE.Vector3(0,0,-1).applyQuaternion(self.camera.quaternion),distance=self.zoom.delta*self.dragZoomSpeed,Math.abs(distance)>self.EPS&&(lookAt.setLength(distance),self.camera.position.add(lookAt),self.dispatchEvent(self.EVENT.UPDATE))),self.zoom.delta=0)},ZoomController}(),FOUR.BoundingBox=function(){function BoundingBox(name){THREE.Object3D.call(this),this.depth=0,this.envelope=null,this.height=0,this.name=name,this.width=0,this.visible=!1,this.reset()}return BoundingBox.prototype=Object.create(THREE.Object3D.prototype),BoundingBox.prototype.constructor=BoundingBox,BoundingBox.prototype.getCenter=function(){return this.position},BoundingBox.prototype.getEnvelope=function(){return this.envelope},BoundingBox.prototype.getRadius=function(){return this.helper.geometry.boundingSphere.radius},BoundingBox.prototype.getXDimension=function(){return this.width},BoundingBox.prototype.getYDimension=function(){return this.depth},BoundingBox.prototype.getZDimension=function(){return this.height},BoundingBox.prototype.reset=function(){var self=this;self.position.set(0,0,0),self.envelope=new THREE.Box3(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,0)),self.children.forEach(function(obj){self.remove(obj)});var geom=new THREE.BoxGeometry(1,1,1),mesh=new THREE.Mesh(geom);self.helper=new THREE.BoxHelper(mesh)},BoundingBox.prototype.toggleVisibility=function(){var self=this;self.visible=!self.visible},BoundingBox.prototype.update=function(objects){var self=this;if(self.reset(),objects&&objects.length>0){self.envelope.setFromObject(objects[0]),objects.forEach(function(obj){var objEnv=new THREE.Box3(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,0));objEnv.setFromObject(obj),self.envelope.union(objEnv)}),self.width=self.envelope.max.x-self.envelope.min.x,self.depth=self.envelope.max.y-self.envelope.min.y,self.height=self.envelope.max.z-self.envelope.min.z;var geom=new THREE.BoxGeometry(self.width,self.depth,self.height),mesh=new THREE.Mesh(geom);self.helper=new THREE.BoxHelper(mesh),self.add(self.helper)}else self.visible=!1;self.position.set(self.envelope.min.x+self.width/2,self.envelope.min.y+self.depth/2,self.envelope.min.z+self.height/2)},BoundingBox}(),FOUR.ClickSelectionController=function(){function ClickSelectionController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.SINGLE_CLICK_ACTION={SELECT:0,TOGGLE:1},self.EPS=2,self.KEY={ALT:18,CTRL:17,SHIFT:16},self.MOUSE_STATE={DOWN:0,UP:1},self.click=self.SINGLE_CLICK_ACTION.SELECT,self.domElement=config.viewport.domElement,self.enabled=!1,self.filter=function(){return!0},self.filters={},self.intersects=[],self.listeners={},self.modifiers={},self.mouse={end:new THREE.Vector2,start:new THREE.Vector2,state:self.MOUSE_STATE.UP},self.raycaster=new THREE.Raycaster,self.timeout=null,self.viewport=config.viewport,Object.keys(self.KEY).forEach(function(key){self.modifiers[self.KEY[key]]=!1})}return ClickSelectionController.prototype=Object.create(THREE.EventDispatcher.prototype),ClickSelectionController.prototype.contextMenu=function(event){event.preventDefault()},ClickSelectionController.prototype.disable=function(){var self=this;self.enabled=!1,Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},ClickSelectionController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;addListener(self.viewport.domElement,"contextmenu",self.onContextMenu),addListener(self.viewport.domElement,"mousedown",self.onMouseDown),addListener(self.viewport.domElement,"mousemove",self.onMouseMove),addListener(self.viewport.domElement,"mouseup",self.onMouseUp),addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),self.enabled=!0},ClickSelectionController.prototype.getSelected=function(){return this.raycaster.setFromCamera(this.mouse.end,this.viewport.camera),this.intersects=this.raycaster.intersectObjects(this.viewport.scene.model.children,!0),this.intersects&&this.intersects.length>0?this.intersects[0]:null},ClickSelectionController.prototype.onContextMenu=function(){},ClickSelectionController.prototype.onDoubleClick=function(){var selected=this.getSelected();selected&&(this.modifiers[this.KEY.CTRL]?this.dispatchEvent({type:"lookat",position:selected.point,object:selected.object}):this.dispatchEvent({type:"settarget",position:selected.point,object:selected.object}))},ClickSelectionController.prototype.onKeyDown=function(event){(event.keyCode===this.KEY.ALT||event.keyCode===this.KEY.CTRL||event.keyCode===this.KEY.SHIFT)&&(this.modifiers[event.keyCode]=!0)},ClickSelectionController.prototype.onKeyUp=function(event){(event.keyCode===this.KEY.ALT||event.keyCode===this.KEY.CTRL||event.keyCode===this.KEY.SHIFT)&&(this.modifiers[event.keyCode]=!1)},ClickSelectionController.prototype.onMouseDown=function(event){event.preventDefault(),event.button===THREE.MOUSE.LEFT&&(this.mouse.state=this.MOUSE_STATE.DOWN,this.mouse.start.x=event.offsetX/this.domElement.clientWidth*2-1,this.mouse.start.y=2*-(event.offsetY/this.domElement.clientHeight)+1,this.mouse.end.copy(this.mouse.start))},ClickSelectionController.prototype.onMouseMove=function(event){var delta=new THREE.Vector2(event.offsetX,event.offsetY).sub(this.mouse.start).length();this.mouse.state===this.MOUSE_STATE.DOWN&&delta<=this.EPS?(this.mouse.end.x=event.offsetX/this.domElement.clientWidth*2-1,this.mouse.end.y=2*-(event.offsetY/this.domElement.clientHeight)+1):this.mouse.state=this.MOUSE_STATE.UP},ClickSelectionController.prototype.onMouseUp=function(event){var self=this;event.button===THREE.MOUSE.LEFT&&self.mouse.state===this.MOUSE_STATE.DOWN&&(null!==self.timeout?(clearTimeout(self.timeout),self.timeout=null,self.onDoubleClick()):self.timeout=setTimeout(function(){clearTimeout(self.timeout),self.timeout=null,self.onSingleClick()},FOUR.SINGLE_CLICK_TIMEOUT),self.mouse.state=self.MOUSE_STATE.UP,event.preventDefault())},ClickSelectionController.prototype.onSingleClick=function(){var selection=this.getSelected();selection?this.modifiers[this.KEY.SHIFT]===!0?this.dispatchEvent({type:"add",selection:selection}):this.modifiers[this.KEY.ALT]===!0?this.dispatchEvent({type:"remove",selection:selection}):this.click===this.SINGLE_CLICK_ACTION.SELECT?this.dispatchEvent({type:"select",selection:selection}):this.click===this.SINGLE_CLICK_ACTION.TOGGLE&&this.dispatchEvent({type:"toggle",selection:selection}):this.dispatchEvent({type:"clear"})},ClickSelectionController.prototype.setFilter=function(){},ClickSelectionController.prototype.update=function(){},ClickSelectionController}(),FOUR.MarqueeSelectionController=function(){function MarqueeSelectionController(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.EPS=2,self.INDEX_TIMEOUT=500,self.KEY={ALT:18,CTRL:17,SHIFT:16},self.SELECT_ACTIONS={ADD:0,REMOVE:1,SELECT:2},self.MOUSE_STATE={DOWN:0,UP:1},self.camera=config.camera,self.domElement=config.viewport.domElement,self.enabled=!1,self.filter=null,self.filters={all:self.selectAll,nearest:self.selectNearest,objects:self.selectObjects,points:self.selectPoints},self.frustum=new THREE.Frustum,self.indexingTimeout=null,self.listeners={},self.marquee=document.getElementById("marquee"),self.modifiers={},self.mouse={end:new THREE.Vector2,start:new THREE.Vector2,state:self.MOUSE_STATE.UP},self.quadtree=new Quadtree({height:config.viewport.domElement.clientHeight,width:config.viewport.domElement.clientWidth}),self.selectAction=self.SELECT_ACTIONS.SELECT,self.selection=[],self.viewport=config.viewport,Object.keys(self.KEY).forEach(function(key){self.modifiers[self.KEY[key]]=!1})}return MarqueeSelectionController.prototype=Object.create(THREE.EventDispatcher.prototype),MarqueeSelectionController.prototype.buildIndex=function(){var matrix,objs,self=this,total=0;self.quadtree=new Quadtree({height:self.viewport.domElement.clientHeight,width:self.viewport.domElement.clientWidth}),matrix=(new THREE.Matrix4).multiplyMatrices(self.camera.projectionMatrix,self.camera.matrixWorldInverse),self.frustum.setFromMatrix(matrix),objs=self.viewport.getScene().getModelObjects(),objs.forEach(function(child){child.matrixWorldNeedsUpdate&&child.updateMatrixWorld();try{child.geometry&&self.frustum.intersectsObject(child)&&(child instanceof THREE.Points?total+=self.indexPointsVertices(child,self.quadtree):child instanceof THREE.Object3D&&(self.indexObject3DVertices(child,self.quadtree),total+=1))}catch(err){}}),console.info("Added %s objects to the view index",total)},MarqueeSelectionController.prototype.disable=function(){var self=this;self.enabled=!1,self.hideMarquee(),Object.keys(self.listeners).forEach(function(key){var listener=self.listeners[key];listener.element.removeEventListener(listener.event,listener.fn)})},MarqueeSelectionController.prototype.enable=function(){function addListener(element,event,fn){self.listeners[event]={element:element,event:event,fn:fn.bind(self)},element.addEventListener(event,self.listeners[event].fn,!1)}var self=this;self.camera=self.viewport.getCamera(),addListener(self.camera,"update",self.onCameraUpdate),addListener(self.viewport,"camera-change",self.onCameraChange),addListener(self.viewport.domElement,"mousedown",self.onMouseDown),addListener(self.viewport.domElement,"mousemove",self.onMouseMove),addListener(self.viewport.domElement,"mouseup",self.onMouseUp),addListener(window,"keydown",self.onKeyDown),addListener(window,"keyup",self.onKeyUp),addListener(window,"resize",self.onWindowResize),self.enabled=!0,self.buildIndex()},MarqueeSelectionController.prototype.hideMarquee=function(){this.marquee.setAttribute("style","display:none;")},MarqueeSelectionController.prototype.indexObject3DVertices=function(obj,index){var height,p,width,x,y,maxX=0,maxY=0,minX=this.viewport.domElement.clientWidth,minY=this.viewport.domElement.clientHeight,self=this;obj.matrixWorldNeedsUpdate&&obj.updateMatrixWorld(),obj.geometry.vertices.forEach(function(vertex){p=vertex.clone(),p.applyMatrix4(obj.matrixWorld),p=FOUR.utils.getVertexScreenCoordinates(p,self.camera,self.viewport.domElement.clientWidth,self.viewport.domElement.clientHeight),maxX=p.x>maxX?p.x:maxX,maxY=p.y>maxY?p.y:maxY,minX=p.x<minX?p.x:minX,minY=p.y<minY?p.y:minY}),height=maxY-minY>0?maxY-minY:0,width=maxX-minX>0?maxX-minX:0,x=minX>=0?minX:0,y=minY>=0?minY:0,index.push({uuid:obj.uuid.slice(),x:x,y:y,height:height,width:width,index:-1,type:"THREE.Object3D"})},MarqueeSelectionController.prototype.indexPointsVertices=function(obj,index){var i,p,vertex,self=this,total=0;if(obj.geometry.vertices)for(i=0;i<obj.geometry.vertices.length;i++)total+=1,vertex=obj.geometry.vertices[i],p=FOUR.utils.getObjectScreenCoordinates(vertex,self.camera,self.viewport.domElement.clientWidth,self.viewport.domElement.clientHeight),p.x>=0&&p.y>=0&&(index.push({uuid:obj.uuid.slice(),x:Number(p.x),y:Number(p.y),width:0,height:0,index:i,type:"THREE.Points"}),console.info({uuid:obj.uuid.slice(),x:Number(p.x),y:Number(p.y),width:0,height:0,index:i,type:"THREE.Points"}));return total},MarqueeSelectionController.prototype.onCameraChange=function(){this.disable(),this.enable()},MarqueeSelectionController.prototype.onCameraUpdate=function(){this.reindex()},MarqueeSelectionController.prototype.onContextMenu=function(event){event.preventDefault()},MarqueeSelectionController.prototype.onKeyDown=function(event){event.keyCode===this.KEY.ALT?this.selectAction=this.SELECT_ACTIONS.REMOVE:event.keyCode===this.KEY.SHIFT&&(this.selectAction=this.SELECT_ACTIONS.ADD)},MarqueeSelectionController.prototype.onKeyUp=function(event){event.keyCode===this.KEY.ALT?this.selectAction=this.SELECT_ACTIONS.SELECT:event.keyCode===this.KEY.SHIFT&&(this.selectAction=this.SELECT_ACTIONS.SELECT)},MarqueeSelectionController.prototype.onMouseDown=function(event){event.button===THREE.MOUSE.LEFT&&(event.preventDefault(),this.mouse.state=this.MOUSE_STATE.DOWN,this.mouse.start.set(event.offsetX,event.offsetY),this.mouse.end.copy(event.offsetX,event.offsetY))},MarqueeSelectionController.prototype.onMouseMove=function(event){var delta=new THREE.Vector2(event.offsetX,event.offsetY).sub(this.mouse.start).length();if(this.mouse.state===this.MOUSE_STATE.DOWN&&delta>this.EPS){event.preventDefault(),event.stopPropagation(),this.mouse.end.set(event.offsetX,event.offsetY);var width=Math.abs(this.mouse.end.x-this.mouse.start.x),height=Math.abs(this.mouse.end.y-this.mouse.start.y);this.mouse.end.x>this.mouse.start.x&&this.mouse.end.y>this.mouse.start.y?this.setMarqueePosition(this.mouse.start.x,this.mouse.start.y,width,height):this.mouse.end.x<this.mouse.start.x&&this.mouse.end.y>this.mouse.start.y?this.setMarqueePosition(this.mouse.end.x,this.mouse.start.y,width,height):this.mouse.end.x>this.mouse.start.x&&this.mouse.end.y<this.mouse.start.y?this.setMarqueePosition(this.mouse.start.x,this.mouse.end.y,width,height):this.mouse.end.x<this.mouse.start.x&&this.mouse.end.y<this.mouse.start.y&&this.setMarqueePosition(this.mouse.end.x,this.mouse.end.y,width,height)}},MarqueeSelectionController.prototype.onMouseUp=function(event){if(this.mouse.state===this.MOUSE_STATE.DOWN&&event.button===THREE.MOUSE.LEFT){event.preventDefault(),event.stopPropagation(),this.mouse.state=this.MOUSE_STATE.UP,this.hideMarquee();var width=Math.abs(this.mouse.end.x-this.mouse.start.x),height=Math.abs(this.mouse.end.y-this.mouse.start.y);this.mouse.end.x>this.mouse.start.x&&this.mouse.end.y>this.mouse.start.y?this.select(this.mouse.start.x,this.mouse.start.y,width,height):this.mouse.end.x<this.mouse.start.x&&this.mouse.end.y>this.mouse.start.y?this.select(this.mouse.end.x,this.mouse.start.y,width,height):this.mouse.end.x>this.mouse.start.x&&this.mouse.end.y<this.mouse.start.y?this.select(this.mouse.start.x,this.mouse.end.y,width,height):this.mouse.end.x<this.mouse.start.x&&this.mouse.end.y<this.mouse.start.y&&this.select(this.mouse.end.x,this.mouse.end.y,width,height)}},MarqueeSelectionController.prototype.onWindowResize=function(){},MarqueeSelectionController.prototype.reindex=function(){this.indexingTimeout&&(clearTimeout(this.indexingTimeout),this.indexingTimeout=null),this.indexingTimeout=setTimeout(this.buildIndex.bind(this),this.INDEX_TIMEOUT)},MarqueeSelectionController.prototype.select=function(x,y,width,height){var r1={p1:{},p2:{}},r2={p1:{},p2:{}};this.selection=this.quadtree.colliding({x:x,y:y,width:width,height:height},function(selection,obj){return r1.p1.x=obj.x,r1.p1.y=obj.y,r1.p2.x=obj.x+obj.width,r1.p2.y=obj.y+obj.height,r2.p1.x=selection.x,r2.p1.y=selection.y,r2.p2.x=selection.x+selection.width,r2.p2.y=selection.y+selection.height,FOUR.utils.isContained(r1,r2)}),this.selection=this.selection.map(function(item){return{distance:null,face:null,index:item.index,object:null,type:item.type,uuid:item.uuid}}),this.selectAction===this.SELECT_ACTIONS.ADD?this.dispatchEvent({type:"add",selection:this.selection}):this.selectAction===this.SELECT_ACTIONS.REMOVE?this.dispatchEvent({type:"remove",selection:this.selection}):this.selectAction===this.SELECT_ACTIONS.SELECT&&this.dispatchEvent({type:"select",selection:this.selection})},MarqueeSelectionController.prototype.setFilter=function(){throw new Error("not implemented")},MarqueeSelectionController.prototype.setMarqueePosition=function(x,y,w,h){this.marquee.setAttribute("style","display:block;left:"+x+"px;top:"+y+"px;width:"+w+"px;height:"+h+"px;")},MarqueeSelectionController.prototype.update=function(){},MarqueeSelectionController}(),FOUR.SelectionSet=function(){function SelectionSet(config){THREE.EventDispatcher.call(this),config=config||{};var self=this;self.index=[],self.items=[],self.name="default-selection-set",Object.keys(config).forEach(function(key){self[key]=config[key]})}return SelectionSet.prototype=Object.create(THREE.EventDispatcher.prototype),SelectionSet.prototype.constructor=SelectionSet,SelectionSet.prototype.add=function(obj,update){update="undefined"==typeof update?!0:update,this.contains(obj)||(obj.uuid||(obj.index=obj.index||-1,obj.type=obj.type||this.getType(obj),obj.uuid=obj.object.uuid),this.items.push(obj)),update&&(this.updateIndex(),
this.dispatchEvent({type:"update",added:[obj],removed:[],selected:this.items}))},SelectionSet.prototype.addAll=function(objects,update){update="undefined"==typeof update?!0:update;var self=this;objects.forEach(function(obj){self.add(obj,!1)}),update&&(self.updateIndex(),self.dispatchEvent({type:"update",added:objects,removed:[],selected:self.items}))},SelectionSet.prototype.buildIndex=function(objects){var self=this;return objects.reduce(function(map,obj){return map[self.getObjectIndexId(obj)]=obj,map},{})},SelectionSet.prototype.contains=function(obj){var id=this.getObjectIndexId(obj);return this.index.indexOf(id)>-1},SelectionSet.prototype.getObjectIndexId=function(obj){var uuid=obj.uuid?obj.uuid:obj.object.uuid;return uuid+","+("undefined"!=typeof obj.index?obj.index:"-1")},SelectionSet.prototype.getType=function(obj){var type="undefined",types={"THREE.Face3":THREE.Face3,"THREE.Line":THREE.Line,"THREE.LineSegments":THREE.LineSegments,"THREE.Mesh":THREE.Mesh,"THREE.Points":THREE.Points};try{Object.keys(types).forEach(function(key){obj.object instanceof types[key]&&(type=key)})}finally{return type}},SelectionSet.prototype.remove=function(obj,update){update="undefined"==typeof update?!0:update;var removed=[];return this.items=this.items.filter(function(el){return el.uuid===obj.uuid?(removed.push(el),!1):!0}),update&&(this.updateIndex(),this.dispatchEvent({type:"update",added:[],removed:removed,selected:this.items})),removed},SelectionSet.prototype.removeAll=function(objects,update){update="undefined"==typeof update?!0:update;var ids=[],removed=[];objects&&objects.length>0?(ids=objects.map(function(item){return item.uuid}),this.items=this.items.filter(function(el){return ids.indexOf(el.uuid)>-1?(removed.push(el),!1):!0})):(removed=this.items,this.items=[]),update&&(this.updateIndex(),this.dispatchEvent({type:"update",added:[],removed:removed,selected:this.items}))},SelectionSet.prototype.select=function(selection){var id,added=[],removed=[],self=this,selected=self.buildIndex(selection),ids=Object.keys(selected);self.items.forEach(function(obj){id=self.getObjectIndexId(obj),-1===ids.indexOf(id)&&removed.push(obj)}),selection.forEach(function(obj){self.contains(obj)||added.push(obj)}),this.removeAll(removed,!1),this.addAll(added,!1),this.dispatchEvent({type:"update",added:added,removed:removed,selected:this.items})},SelectionSet.prototype.toggle=function(selection,update){selection=Array.isArray(selection)?selection:[selection],update="undefined"==typeof update?!0:update;var added=[],removed=[],self=this;selection.forEach(function(obj){self.contains(obj)?(self.remove(obj,!1),removed.push(obj)):(self.add(obj,!1),added.push(obj))}),this.updateIndex(),update&&this.dispatchEvent({type:"update",added:added,removed:removed,selected:this.items})},SelectionSet.prototype.updateIndex=function(){this.index=Object.keys(this.buildIndex(this.items))},SelectionSet}();
//# sourceMappingURL=four.min.js.map